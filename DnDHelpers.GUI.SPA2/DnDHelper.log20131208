2013-12-08 14:05:23,545 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 14:05:23,668 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 14:05:23,668 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 14:05:23,821 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 14:05:23,821 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 14:05:23,826 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 14:05:23,826 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 14:05:23,827 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 14:05:23,827 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,828 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 14:05:23,828 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,829 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 14:05:23,829 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 14:05:23,829 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 14:05:23,829 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,829 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 14:05:23,829 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,830 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 14:05:23,830 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 14:05:23,830 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 14:05:23,830 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,830 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 14:05:23,830 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,831 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 14:05:23,831 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 14:05:23,831 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 14:05:23,831 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,832 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 14:05:23,832 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,833 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 14:05:23,833 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 14:05:23,833 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 14:05:23,833 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,834 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 14:05:23,834 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,835 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 14:05:23,836 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 14:05:23,836 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 14:05:23,836 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,837 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 14:05:23,837 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,838 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 14:05:23,838 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 14:05:23,838 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 14:05:23,838 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,838 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 14:05:23,838 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:23,839 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 14:05:23,839 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 14:05:23,839 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 14:05:23,950 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 14:05:24,024 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 14:05:24,068 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 14:05:24,142 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 14:05:24,142 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:24,147 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 14:05:24,147 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:24,150 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 14:05:24,150 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 14:05:24,150 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 14:05:24,150 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,150 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 14:05:24,150 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,151 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 14:05:24,151 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 14:05:24,151 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 14:05:24,151 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,152 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 14:05:24,152 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,153 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 14:05:24,153 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 14:05:24,153 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 14:05:24,153 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 14:05:24,154 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 14:05:24,154 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 14:05:24,155 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 14:05:24,155 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 14:05:24,155 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 14:05:24,155 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:24,155 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 14:05:24,155 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:24,156 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 14:05:24,156 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 14:05:24,156 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 14:05:24,156 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,157 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 14:05:24,157 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,157 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 14:05:24,157 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 14:05:24,157 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 14:05:24,157 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:24,158 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 14:05:24,158 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:24,158 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 14:05:24,158 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 14:05:24,158 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 14:05:24,159 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,159 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 14:05:24,159 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,160 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 14:05:24,160 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 14:05:24,160 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 14:05:24,160 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:24,161 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 14:05:24,161 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:24,162 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 14:05:24,162 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 14:05:24,162 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 14:05:24,162 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,162 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 14:05:24,162 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,163 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 14:05:24,163 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 14:05:24,163 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 14:05:24,163 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,164 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 14:05:24,164 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,164 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 14:05:24,164 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 14:05:24,164 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 14:05:24,164 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,165 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 14:05:24,165 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:24,165 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 14:05:24,165 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 14:05:24,165 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 14:05:24,275 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 14:05:37,611 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 14:05:58,786 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 14:05:58,908 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 14:05:58,908 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 14:05:59,030 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 14:05:59,030 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 14:05:59,034 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 14:05:59,034 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 14:05:59,034 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 14:05:59,034 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,035 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 14:05:59,035 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,036 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 14:05:59,036 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 14:05:59,037 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 14:05:59,037 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,037 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 14:05:59,037 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,038 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 14:05:59,038 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 14:05:59,039 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 14:05:59,039 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,039 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 14:05:59,039 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,040 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 14:05:59,040 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 14:05:59,040 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 14:05:59,040 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,041 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 14:05:59,041 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,043 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 14:05:59,043 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 14:05:59,043 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 14:05:59,043 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,044 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 14:05:59,044 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,046 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 14:05:59,046 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 14:05:59,046 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 14:05:59,046 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,047 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 14:05:59,047 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,048 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 14:05:59,048 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 14:05:59,048 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 14:05:59,048 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,049 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 14:05:59,049 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:05:59,049 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 14:05:59,049 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 14:05:59,049 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 14:05:59,171 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 14:05:59,252 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 14:05:59,300 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 14:05:59,352 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 14:05:59,352 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:59,356 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 14:05:59,357 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:59,359 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 14:05:59,359 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 14:05:59,360 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 14:05:59,360 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,360 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 14:05:59,360 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,361 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 14:05:59,361 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 14:05:59,361 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 14:05:59,361 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,362 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 14:05:59,362 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,363 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 14:05:59,363 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 14:05:59,363 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 14:05:59,363 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 14:05:59,364 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 14:05:59,364 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 14:05:59,365 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 14:05:59,365 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 14:05:59,365 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 14:05:59,365 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:59,365 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 14:05:59,365 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:59,366 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 14:05:59,366 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 14:05:59,366 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 14:05:59,366 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,367 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 14:05:59,367 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,367 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 14:05:59,367 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 14:05:59,367 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 14:05:59,367 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:59,368 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 14:05:59,368 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 14:05:59,369 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 14:05:59,369 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 14:05:59,369 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 14:05:59,369 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,369 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 14:05:59,369 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,370 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 14:05:59,370 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 14:05:59,370 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 14:05:59,370 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:59,371 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 14:05:59,371 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:05:59,372 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 14:05:59,372 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 14:05:59,372 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 14:05:59,372 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,373 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 14:05:59,373 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,373 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 14:05:59,373 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 14:05:59,373 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 14:05:59,373 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,374 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 14:05:59,374 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,375 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 14:05:59,375 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 14:05:59,375 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 14:05:59,375 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,375 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 14:05:59,375 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:05:59,384 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 14:05:59,384 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 14:05:59,384 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 14:05:59,524 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 14:11:58,267 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 14:11:58,333 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 14:11:58,333 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 14:11:58,475 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 14:11:58,475 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 14:11:58,479 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 14:11:58,479 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 14:11:58,480 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 14:11:58,480 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,481 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 14:11:58,481 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,482 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 14:11:58,482 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 14:11:58,482 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 14:11:58,482 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,482 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 14:11:58,482 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,483 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 14:11:58,483 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 14:11:58,483 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 14:11:58,483 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,484 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 14:11:58,484 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,484 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 14:11:58,484 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 14:11:58,484 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 14:11:58,484 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,485 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 14:11:58,485 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,486 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 14:11:58,486 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 14:11:58,486 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 14:11:58,486 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,487 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 14:11:58,487 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,488 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 14:11:58,488 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 14:11:58,489 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 14:11:58,489 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,489 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 14:11:58,489 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,490 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 14:11:58,490 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 14:11:58,490 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 14:11:58,490 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,491 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 14:11:58,491 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 14:11:58,492 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 14:11:58,492 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 14:11:58,492 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 14:11:58,579 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 14:11:58,627 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 14:11:58,665 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 14:11:58,703 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 14:11:58,703 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:11:58,707 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 14:11:58,707 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:11:58,709 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 14:11:58,709 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 14:11:58,709 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 14:11:58,709 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,710 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 14:11:58,710 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,711 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 14:11:58,711 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 14:11:58,711 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 14:11:58,711 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,711 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 14:11:58,711 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,712 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 14:11:58,712 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 14:11:58,712 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 14:11:58,712 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 14:11:58,713 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 14:11:58,713 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 14:11:58,714 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 14:11:58,714 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 14:11:58,714 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 14:11:58,714 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 14:11:58,715 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 14:11:58,715 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 14:11:58,716 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 14:11:58,716 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 14:11:58,716 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 14:11:58,716 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,716 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 14:11:58,716 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,717 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 14:11:58,717 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 14:11:58,717 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 14:11:58,717 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 14:11:58,718 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 14:11:58,718 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 14:11:58,718 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 14:11:58,718 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 14:11:58,718 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 14:11:58,718 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,719 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 14:11:58,719 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,719 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 14:11:58,719 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 14:11:58,720 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 14:11:58,720 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:11:58,720 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 14:11:58,720 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 14:11:58,723 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 14:11:58,724 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 14:11:58,724 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 14:11:58,724 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,725 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 14:11:58,725 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,726 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 14:11:58,726 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 14:11:58,726 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 14:11:58,726 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,726 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 14:11:58,726 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,727 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 14:11:58,727 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 14:11:58,727 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 14:11:58,727 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,728 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 14:11:58,728 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 14:11:58,728 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 14:11:58,728 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 14:11:58,728 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 14:11:58,835 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 14:13:46,790 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 14:34:18,460 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 17:29:00,152 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 17:29:00,217 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 17:29:00,217 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 17:29:00,314 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 17:29:00,314 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 17:29:00,318 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 17:29:00,319 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 17:29:00,319 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 17:29:00,319 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,320 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 17:29:00,320 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,321 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 17:29:00,321 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 17:29:00,321 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 17:29:00,321 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,321 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 17:29:00,321 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,322 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 17:29:00,322 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 17:29:00,322 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 17:29:00,322 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,322 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 17:29:00,322 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,323 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 17:29:00,323 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 17:29:00,323 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 17:29:00,323 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,324 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 17:29:00,324 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,325 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 17:29:00,325 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 17:29:00,325 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 17:29:00,325 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,326 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 17:29:00,326 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,328 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 17:29:00,328 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 17:29:00,328 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 17:29:00,328 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,329 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 17:29:00,329 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,329 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 17:29:00,329 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 17:29:00,329 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 17:29:00,329 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,330 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 17:29:00,330 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:29:00,331 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 17:29:00,331 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 17:29:00,331 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 17:29:00,427 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 17:29:00,482 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 17:29:00,521 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 17:29:00,560 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 17:29:00,560 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:29:00,564 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 17:29:00,564 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:29:00,567 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 17:29:00,567 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 17:29:00,567 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 17:29:00,567 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,567 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 17:29:00,567 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,568 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 17:29:00,568 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 17:29:00,568 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 17:29:00,568 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,569 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 17:29:00,569 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,570 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 17:29:00,570 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 17:29:00,570 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 17:29:00,570 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 17:29:00,571 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 17:29:00,571 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 17:29:00,572 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 17:29:00,572 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 17:29:00,572 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 17:29:00,572 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 17:29:00,573 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 17:29:00,573 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 17:29:00,573 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 17:29:00,573 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 17:29:00,573 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 17:29:00,573 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,574 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 17:29:00,574 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,575 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 17:29:00,575 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 17:29:00,575 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 17:29:00,575 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 17:29:00,575 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 17:29:00,575 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 17:29:00,576 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 17:29:00,576 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 17:29:00,576 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 17:29:00,576 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,576 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 17:29:00,576 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,577 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 17:29:00,577 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 17:29:00,577 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 17:29:00,577 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:29:00,578 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 17:29:00,578 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:29:00,580 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 17:29:00,580 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 17:29:00,580 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 17:29:00,580 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,581 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 17:29:00,581 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,582 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 17:29:00,582 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 17:29:00,582 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 17:29:00,582 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,582 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 17:29:00,582 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,583 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 17:29:00,583 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 17:29:00,583 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 17:29:00,583 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,583 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 17:29:00,583 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:29:00,584 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 17:29:00,584 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 17:29:00,584 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 17:29:00,682 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 17:32:51,217 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 17:38:29,809 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 17:47:15,798 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 17:47:15,861 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 17:47:15,861 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 17:47:15,944 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 17:47:15,944 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 17:47:15,947 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 17:47:15,947 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 17:47:15,947 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 17:47:15,947 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,948 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 17:47:15,948 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,949 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 17:47:15,949 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 17:47:15,949 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 17:47:15,949 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,949 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 17:47:15,949 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,950 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 17:47:15,950 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 17:47:15,950 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 17:47:15,950 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,951 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 17:47:15,951 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,951 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 17:47:15,951 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 17:47:15,951 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 17:47:15,951 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,952 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 17:47:15,952 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,953 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 17:47:15,953 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 17:47:15,953 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 17:47:15,953 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,954 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 17:47:15,954 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,956 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 17:47:15,956 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 17:47:15,956 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 17:47:15,956 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,956 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 17:47:15,957 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,957 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 17:47:15,957 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 17:47:15,957 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 17:47:15,957 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,958 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 17:47:15,958 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 17:47:15,959 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 17:47:15,959 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 17:47:15,959 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 17:47:16,044 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 17:47:16,093 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 17:47:16,131 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 17:47:16,171 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 17:47:16,171 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:47:16,174 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 17:47:16,174 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:47:16,177 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 17:47:16,177 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 17:47:16,177 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 17:47:16,177 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,177 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 17:47:16,177 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,178 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 17:47:16,178 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 17:47:16,178 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 17:47:16,178 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,179 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 17:47:16,179 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,179 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 17:47:16,180 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 17:47:16,180 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 17:47:16,180 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 17:47:16,181 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 17:47:16,181 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 17:47:16,181 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 17:47:16,181 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 17:47:16,182 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 17:47:16,182 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 17:47:16,182 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 17:47:16,182 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 17:47:16,183 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 17:47:16,183 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 17:47:16,183 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 17:47:16,183 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,183 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 17:47:16,183 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,184 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 17:47:16,184 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 17:47:16,184 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 17:47:16,184 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 17:47:16,185 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 17:47:16,185 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 17:47:16,185 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 17:47:16,185 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 17:47:16,185 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 17:47:16,185 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,186 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 17:47:16,186 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,187 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 17:47:16,187 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 17:47:16,187 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 17:47:16,187 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:47:16,187 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 17:47:16,187 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 17:47:16,189 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 17:47:16,189 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 17:47:16,189 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 17:47:16,189 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,189 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 17:47:16,189 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,190 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 17:47:16,190 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 17:47:16,190 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 17:47:16,190 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,190 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 17:47:16,190 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,191 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 17:47:16,191 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 17:47:16,191 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 17:47:16,191 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,192 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 17:47:16,192 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 17:47:16,192 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 17:47:16,192 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 17:47:16,192 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 17:47:16,285 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 18:06:43,049 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 18:13:11,086 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 18:13:11,148 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 18:13:11,148 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 18:13:11,251 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 18:13:11,251 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 18:13:11,256 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 18:13:11,256 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 18:13:11,256 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 18:13:11,256 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,257 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 18:13:11,257 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,258 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 18:13:11,258 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 18:13:11,258 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 18:13:11,258 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,258 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 18:13:11,258 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,259 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 18:13:11,259 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 18:13:11,259 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 18:13:11,259 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,260 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 18:13:11,260 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,260 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 18:13:11,260 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 18:13:11,260 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 18:13:11,260 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,261 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 18:13:11,261 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,262 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 18:13:11,262 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 18:13:11,262 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 18:13:11,262 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,263 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 18:13:11,263 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,265 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 18:13:11,265 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 18:13:11,265 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 18:13:11,265 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,265 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 18:13:11,265 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,266 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 18:13:11,266 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 18:13:11,266 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 18:13:11,266 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,267 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 18:13:11,267 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 18:13:11,268 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 18:13:11,268 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 18:13:11,268 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 18:13:11,353 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 18:13:11,398 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 18:13:11,436 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 18:13:11,479 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 18:13:11,479 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 18:13:11,483 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 18:13:11,483 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 18:13:11,485 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 18:13:11,485 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 18:13:11,485 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 18:13:11,485 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,486 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 18:13:11,486 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,486 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 18:13:11,486 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 18:13:11,486 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 18:13:11,487 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,487 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 18:13:11,487 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,488 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 18:13:11,488 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 18:13:11,488 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 18:13:11,488 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 18:13:11,489 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 18:13:11,489 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 18:13:11,490 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 18:13:11,490 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 18:13:11,490 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 18:13:11,490 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 18:13:11,490 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 18:13:11,491 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 18:13:11,491 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 18:13:11,491 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 18:13:11,491 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 18:13:11,491 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,492 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 18:13:11,492 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,492 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 18:13:11,492 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 18:13:11,493 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 18:13:11,493 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 18:13:11,493 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 18:13:11,493 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 18:13:11,494 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 18:13:11,494 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 18:13:11,494 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 18:13:11,494 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,494 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 18:13:11,494 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,495 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 18:13:11,495 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 18:13:11,495 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 18:13:11,495 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 18:13:11,496 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 18:13:11,496 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 18:13:11,507 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 18:13:11,507 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 18:13:11,508 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 18:13:11,508 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,509 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 18:13:11,509 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,510 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 18:13:11,510 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 18:13:11,510 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 18:13:11,510 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,510 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 18:13:11,510 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,511 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 18:13:11,511 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 18:13:11,511 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 18:13:11,511 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,511 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 18:13:11,511 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 18:13:11,512 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 18:13:11,512 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 18:13:11,512 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 18:13:11,606 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 18:13:24,777 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 19:26:29,012 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2013-12-08 19:26:29,102 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 19:26:29,102 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 19:26:29,199 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2013-12-08 19:26:29,199 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2013-12-08 19:26:29,204 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 19:26:29,204 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2013-12-08 19:26:29,204 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 19:26:29,204 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,205 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2013-12-08 19:26:29,205 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,206 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 19:26:29,206 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2013-12-08 19:26:29,206 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 19:26:29,206 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,207 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2013-12-08 19:26:29,207 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,207 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 19:26:29,207 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2013-12-08 19:26:29,207 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 19:26:29,207 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,208 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2013-12-08 19:26:29,208 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,209 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 19:26:29,209 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2013-12-08 19:26:29,209 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 19:26:29,209 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,209 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2013-12-08 19:26:29,209 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,210 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 19:26:29,210 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2013-12-08 19:26:29,210 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 19:26:29,210 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,212 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2013-12-08 19:26:29,212 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,213 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 19:26:29,213 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2013-12-08 19:26:29,213 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 19:26:29,213 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,214 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2013-12-08 19:26:29,214 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,215 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 19:26:29,215 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2013-12-08 19:26:29,215 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 19:26:29,215 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,216 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2013-12-08 19:26:29,216 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2013-12-08 19:26:29,217 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 19:26:29,217 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2013-12-08 19:26:29,217 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2013-12-08 19:26:29,301 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2013-12-08 19:26:29,349 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2013-12-08 19:26:29,390 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2013-12-08 19:26:29,432 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 19:26:29,432 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 19:26:29,436 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2013-12-08 19:26:29,436 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 19:26:29,438 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 19:26:29,438 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2013-12-08 19:26:29,438 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 19:26:29,438 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,439 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2013-12-08 19:26:29,439 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,440 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 19:26:29,440 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2013-12-08 19:26:29,440 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 19:26:29,440 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,441 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2013-12-08 19:26:29,441 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,441 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 19:26:29,441 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2013-12-08 19:26:29,441 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 19:26:29,441 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 19:26:29,442 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2013-12-08 19:26:29,442 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2013-12-08 19:26:29,443 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 19:26:29,443 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2013-12-08 19:26:29,443 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 19:26:29,443 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 19:26:29,444 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2013-12-08 19:26:29,444 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2013-12-08 19:26:29,444 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 19:26:29,444 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2013-12-08 19:26:29,445 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 19:26:29,445 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,445 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2013-12-08 19:26:29,445 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,446 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 19:26:29,446 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2013-12-08 19:26:29,446 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 19:26:29,446 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 19:26:29,446 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2013-12-08 19:26:29,446 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2013-12-08 19:26:29,447 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 19:26:29,447 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2013-12-08 19:26:29,447 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 19:26:29,447 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,448 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2013-12-08 19:26:29,448 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,448 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 19:26:29,448 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2013-12-08 19:26:29,448 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 19:26:29,448 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 19:26:29,458 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2013-12-08 19:26:29,458 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2013-12-08 19:26:29,460 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 19:26:29,460 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2013-12-08 19:26:29,460 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 19:26:29,460 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,461 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2013-12-08 19:26:29,461 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,462 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 19:26:29,462 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2013-12-08 19:26:29,462 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 19:26:29,462 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,463 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2013-12-08 19:26:29,463 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,463 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 19:26:29,463 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2013-12-08 19:26:29,463 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 19:26:29,463 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,464 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2013-12-08 19:26:29,464 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2013-12-08 19:26:29,464 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 19:26:29,464 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2013-12-08 19:26:29,464 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2013-12-08 19:26:29,562 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2013-12-08 19:28:00,369 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 19:40:54,658 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 19:41:37,055 INFO  MacAuthProvider - Zalogowano: macper
2013-12-08 19:42:35,743 INFO  MacAuthProvider - Zalogowano: macper
