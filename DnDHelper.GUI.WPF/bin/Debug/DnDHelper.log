2014-10-24 10:45:54,151 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 10:45:54,358 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 10:45:54,533 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:45:54,570 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:45:55,225 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:45:55,269 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:45:55,315 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:45:55,318 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:45:55,321 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:45:55,353 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,361 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:45:55,396 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,401 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:45:55,404 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:45:55,408 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:45:55,419 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,425 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:45:55,437 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,444 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:45:55,447 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:45:55,450 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:45:55,477 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,482 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:45:55,509 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,514 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:45:55,517 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:45:55,520 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:45:55,549 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,554 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:45:55,583 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,588 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:45:55,591 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:45:55,595 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:45:55,650 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,657 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:45:55,710 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,716 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:45:55,719 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:45:55,723 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:45:55,755 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,766 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:45:55,798 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,803 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:45:55,806 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:45:55,810 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:45:55,838 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,842 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:45:55,871 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:45:55,875 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:45:55,879 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:45:55,882 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 10:45:56,072 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 10:45:56,232 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 10:45:56,374 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 10:45:56,541 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:45:56,563 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:45:56,586 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:45:56,606 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:45:56,612 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:45:56,615 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:45:56,619 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:45:56,632 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,636 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:45:56,648 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,654 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:45:56,657 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:45:56,660 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:45:56,674 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,679 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:45:56,693 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,697 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:45:56,701 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:45:56,704 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:45:56,726 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:45:56,734 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:45:56,757 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:45:56,762 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:45:56,765 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:45:56,769 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:45:56,780 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:45:56,784 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:45:56,797 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:45:56,801 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:45:56,805 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:45:56,808 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:45:56,821 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,826 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:45:56,838 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,842 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:45:56,845 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:45:56,849 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:45:56,862 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:45:56,867 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:45:56,876 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:45:56,880 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:45:56,884 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:45:56,887 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:45:56,900 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,905 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:45:56,917 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:56,922 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:45:56,925 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:45:56,928 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:45:56,948 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:45:56,955 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:45:56,975 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:45:56,987 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:45:56,992 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:45:56,995 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:45:57,005 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:57,010 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:45:57,020 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:57,024 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:45:57,028 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:45:57,032 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:45:57,042 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:57,047 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:45:57,056 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:57,061 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:45:57,065 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:45:57,069 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:45:57,078 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:57,083 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:45:57,092 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:45:57,096 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:45:57,100 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:45:57,104 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 10:45:57,288 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 10:45:57,662 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 10:45:57,666 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 10:45:57,669 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 10:45:57,675 INFO  AppFacade - Rejestracja typów
2014-10-24 10:45:57,679 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 10:45:57,683 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 10:45:57,688 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 10:45:57,698 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 10:45:57,702 DEBUG ChangeTracker - File ChangeTracker.xml not found, creating new one
2014-10-24 10:45:57,737 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 10:45:57,754 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 10:45:57,759 INFO  ChangeTracker - All changes saved
2014-10-24 10:45:57,763 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 10:45:57,768 INFO  AppFacade - Typy zarejestrowano
2014-10-24 10:45:57,775 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 10:45:57,793 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 10:45:57,796 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 10:45:58,082 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 10:46:02,787 INFO  ChangeTracker - All changes saved
2014-10-24 10:46:07,835 INFO  ChangeTracker - All changes saved
2014-10-24 10:46:12,869 INFO  ChangeTracker - All changes saved
2014-10-24 10:46:17,890 INFO  ChangeTracker - All changes saved
2014-10-24 10:46:22,916 INFO  ChangeTracker - All changes saved
2014-10-24 10:46:27,925 INFO  ChangeTracker - All changes saved
2014-10-24 10:47:46,780 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 10:47:46,972 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 10:47:47,125 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:47:47,161 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:47:47,757 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:47:47,803 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:47:47,845 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:47:47,848 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:47:47,852 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:47:47,885 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:47,892 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:47:47,927 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:47,933 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:47:47,936 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:47:47,940 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:47:47,952 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:47,959 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:47:47,972 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:47,976 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:47:47,979 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:47:47,983 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:47:48,011 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,017 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:47:48,044 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,050 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:47:48,053 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:47:48,057 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:47:48,087 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,092 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:47:48,122 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,126 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:47:48,130 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:47:48,133 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:47:48,188 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,193 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:47:48,249 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,256 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:47:48,259 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:47:48,263 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:47:48,295 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,302 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:47:48,336 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,340 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:47:48,344 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:47:48,348 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:47:48,377 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,381 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:47:48,413 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:47:48,418 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:47:48,421 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:47:48,425 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 10:47:48,600 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 10:47:48,741 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 10:47:48,872 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 10:47:49,005 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:47:49,026 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:47:49,047 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:47:49,067 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:47:49,075 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:47:49,078 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:47:49,081 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:47:49,095 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,100 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:47:49,112 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,117 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:47:49,120 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:47:49,125 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:47:49,138 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,143 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:47:49,158 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,163 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:47:49,166 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:47:49,170 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:47:49,192 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:47:49,200 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:47:49,222 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:47:49,227 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:47:49,230 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:47:49,234 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:47:49,245 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:47:49,249 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:47:49,260 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:47:49,265 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:47:49,269 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:47:49,272 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:47:49,284 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,289 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:47:49,302 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,306 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:47:49,310 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:47:49,313 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:47:49,322 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:47:49,328 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:47:49,337 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:47:49,341 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:47:49,344 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:47:49,348 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:47:49,360 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,366 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:47:49,378 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,382 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:47:49,385 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:47:49,389 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:47:49,409 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:47:49,414 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:47:49,434 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:47:49,443 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:47:49,447 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:47:49,451 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:47:49,461 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,466 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:47:49,476 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,480 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:47:49,483 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:47:49,487 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:47:49,497 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,501 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:47:49,510 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,515 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:47:49,518 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:47:49,523 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:47:49,533 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,538 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:47:49,547 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:47:49,552 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:47:49,555 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:47:49,558 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 10:47:49,737 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 10:47:50,072 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 10:47:50,076 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 10:47:50,080 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 10:47:50,092 INFO  AppFacade - Rejestracja typów
2014-10-24 10:47:50,104 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 10:47:50,107 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 10:47:50,112 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 10:47:50,117 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 10:47:50,147 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 10:47:50,156 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 10:47:50,161 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 10:47:50,164 INFO  ChangeTracker - All changes saved
2014-10-24 10:47:50,167 INFO  AppFacade - Typy zarejestrowano
2014-10-24 10:47:50,173 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 10:47:50,188 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 10:47:50,192 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 10:47:50,223 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:47:50,463 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 10:47:53,059 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ wspó³czynnika Strength (Bie¿¹cego) o 2
2014-10-24 10:47:53,219 DEBUG CharacterController - Zorg: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Miecz dwurêczny+2 lodu : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-24 10:47:53,223 DEBUG CharacterController - Zorg: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Miecz dwurêczny+2 lodu : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-24 10:47:53,233 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:47:53,265 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 7[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-24 10:47:53,269 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:47:53,273 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: JeŸdziectwo : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:47:53,276 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:47:53,280 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Skakanie : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:47:53,283 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:47:53,288 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +1 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:47:53,302 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 1, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:47:53,306 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:47:53,309 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ciche poruszanie siê : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:47:53,313 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 2, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-24 10:47:53,317 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola -1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:47:53,321 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : -1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:47:53,324 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Postêpowanie ze zwiêrzêtami : 0 (Cecha g³ówna - Charyzma)
2014-10-24 10:47:53,328 DEBUG CharacterController - Zorg: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Zastraszanie : 0 (Cecha g³ówna - Charyzma)
2014-10-24 10:47:53,338 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla Wspinaczka o 5
2014-10-24 10:47:53,343 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla JeŸdziectwo o 5
2014-10-24 10:47:53,346 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla P³ywanie o 5
2014-10-24 10:47:53,349 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla Skakanie o 5
2014-10-24 10:47:53,353 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla Ciche poruszanie siê o 1
2014-10-24 10:47:53,357 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla Nas³uchiwanie o -1
2014-10-24 10:47:53,360 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla Postêpowanie ze zwiêrzêtami o 0
2014-10-24 10:47:53,363 DEBUG CharacterController - Zorg: Zwiêkszono wartoœæ skilla Zastraszanie o 0
2014-10-24 10:47:55,172 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:47:55,340 INFO  ChangeTracker - All changes saved
2014-10-24 10:47:55,565 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:47:55,572 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:47:55,755 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:47:55,947 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:47:56,150 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:48:00,216 INFO  BriefServiceQueueManager - Wys³ano: 8 briefów, 0 enemy briefów
2014-10-24 10:48:00,361 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:48:00,427 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:05,463 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:10,484 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:15,518 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:20,564 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:25,610 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:30,647 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:35,663 INFO  ChangeTracker - All changes saved
2014-10-24 10:48:40,707 INFO  ChangeTracker - All changes saved
2014-10-24 10:50:08,058 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 10:50:08,249 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 10:50:08,409 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:50:08,447 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:50:09,063 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:50:09,103 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:50:09,146 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:50:09,149 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:50:09,153 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:50:09,191 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,195 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:50:09,231 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,236 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:50:09,240 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:50:09,243 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:50:09,255 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,261 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:50:09,273 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,278 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:50:09,282 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:50:09,285 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:50:09,313 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,318 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:50:09,346 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,350 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:50:09,354 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:50:09,357 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:50:09,385 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,390 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:50:09,418 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,423 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:50:09,426 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:50:09,429 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:50:09,482 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,492 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:50:09,546 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,551 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:50:09,555 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:50:09,559 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:50:09,591 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,598 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:50:09,630 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,634 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:50:09,638 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:50:09,641 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:50:09,670 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,674 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:50:09,703 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:50:09,707 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:50:09,710 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:50:09,714 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 10:50:09,896 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 10:50:10,047 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 10:50:10,196 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 10:50:10,339 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:50:10,361 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:50:10,382 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:50:10,402 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:50:10,409 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:50:10,412 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:50:10,416 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:50:10,429 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,433 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:50:10,445 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,450 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:50:10,454 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:50:10,457 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:50:10,471 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,476 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:50:10,491 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,496 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:50:10,499 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:50:10,502 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:50:10,525 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:50:10,533 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:50:10,555 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:50:10,560 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:50:10,564 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:50:10,567 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:50:10,578 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:50:10,583 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:50:10,596 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:50:10,600 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:50:10,604 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:50:10,608 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:50:10,621 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,626 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:50:10,638 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,643 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:50:10,646 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:50:10,649 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:50:10,660 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:50:10,665 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:50:10,674 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:50:10,679 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:50:10,682 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:50:10,686 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:50:10,699 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,703 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:50:10,716 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,721 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:50:10,724 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:50:10,728 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:50:10,747 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:50:10,753 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:50:10,773 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:50:10,782 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:50:10,787 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:50:10,790 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:50:10,800 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,805 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:50:10,816 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,820 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:50:10,823 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:50:10,827 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:50:10,837 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,841 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:50:10,850 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,855 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:50:10,858 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:50:10,863 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:50:10,872 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,877 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:50:10,886 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:50:10,891 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:50:10,895 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:50:10,899 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 10:50:11,087 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 10:50:11,419 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 10:50:11,706 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 10:50:11,711 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 10:50:11,716 INFO  AppFacade - Rejestracja typów
2014-10-24 10:50:11,720 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 10:50:11,724 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 10:50:11,733 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 10:50:15,370 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 10:50:15,400 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 10:50:15,413 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 10:50:15,418 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 10:50:15,440 INFO  AppFacade - Typy zarejestrowano
2014-10-24 10:50:15,477 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 10:50:15,492 ERROR ChangeTracker - Error during deserialization
System.InvalidOperationException: There is an error in XML document (0, 0). ---> System.Xml.XmlException: Root element is missing.
   at System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo(String res)
   at System.Xml.XmlTextReaderImpl.ParseDocumentContent()
   at System.Xml.XmlReader.MoveToContent()
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderChangeTracker.Read5_ChangeTracker()
   --- End of inner exception stack trace ---
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
   at DnDHelper.Domain.ChangeTracker.get_Instance() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\ChangeTracker.cs:line 41
2014-10-24 10:50:15,495 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 10:50:15,499 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 10:50:15,525 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:50:15,795 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 10:50:18,892 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Ukrywanie siê o 4
2014-10-24 10:50:18,898 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ wspó³czynnika Dexterity (Bie¿¹cego) o 1
2014-10-24 10:50:19,081 DEBUG CharacterController - Sabat: Dodano Bonus - Atut: Defensywna walka dwiema broniami Premia do KP : +1 (Zbroja) (Atut: Defensywna walka dwiema broniami)
2014-10-24 10:50:19,092 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +1 (Cecha g³ówna - Si³a)
2014-10-24 10:50:19,114 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 1[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-24 10:50:19,118 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +1 (Cecha g³ówna - Si³a)
2014-10-24 10:50:19,122 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +1 (Cecha g³ówna - Si³a)
2014-10-24 10:50:19,125 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: JeŸdziectwo : +1 (Cecha g³ówna - Si³a)
2014-10-24 10:50:19,129 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Skakanie : +1 (Cecha g³ówna - Si³a)
2014-10-24 10:50:19,132 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,136 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +5 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,140 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 5, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,144 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,147 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ciche poruszanie siê : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,158 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Otwieranie zamków : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,161 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ukrywanie siê : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,165 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: U¿ywanie liny : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:50:19,169 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 4, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-24 10:50:19,172 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Kondycja Premia do umiejêtnoœci: Koncentracja : +4 (Cecha g³ówna - Kondycja)
2014-10-24 10:50:19,176 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Przeszukiwanie : +1 (Cecha g³ówna - Inteligencja)
2014-10-24 10:50:19,179 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Stosowanie mag. urz¹dzeñ : +1 (Cecha g³ówna - Inteligencja)
2014-10-24 10:50:19,183 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:50:19,187 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Leczenie : +2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:50:19,191 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:50:19,194 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:50:19,197 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Sztuka przetrwania : +2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:50:19,201 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Dyplomacja : +1 (Cecha g³ówna - Charyzma)
2014-10-24 10:50:19,204 DEBUG CharacterController - Sabat: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Postêpowanie ze zwiêrzêtami : +1 (Cecha g³ówna - Charyzma)
2014-10-24 10:50:19,214 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla P³ywanie o 1
2014-10-24 10:50:19,218 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Wspinaczka o 1
2014-10-24 10:50:19,222 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla JeŸdziectwo o 1
2014-10-24 10:50:19,225 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Skakanie o 1
2014-10-24 10:50:19,229 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Ciche poruszanie siê o 5
2014-10-24 10:50:19,232 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Otwieranie zamków o 5
2014-10-24 10:50:19,235 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Ukrywanie siê o 5
2014-10-24 10:50:19,239 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla U¿ywanie liny o 5
2014-10-24 10:50:19,242 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Koncentracja o 4
2014-10-24 10:50:19,246 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Przeszukiwanie o 1
2014-10-24 10:50:19,250 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Stosowanie mag. urz¹dzeñ o 1
2014-10-24 10:50:19,253 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Leczenie o 2
2014-10-24 10:50:19,257 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-24 10:50:19,261 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 2
2014-10-24 10:50:19,264 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Sztuka przetrwania o 2
2014-10-24 10:50:19,267 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Dyplomacja o 1
2014-10-24 10:50:19,271 DEBUG CharacterController - Sabat: Zwiêkszono wartoœæ skilla Postêpowanie ze zwiêrzêtami o 1
2014-10-24 10:50:20,520 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:50:20,940 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:50:20,945 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:51:17,317 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 10:51:17,498 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 10:51:17,658 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:51:17,693 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:51:18,311 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:51:18,355 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:51:18,399 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:51:18,402 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:51:18,406 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:51:18,440 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,447 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:51:18,482 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,488 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:51:18,491 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:51:18,495 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:51:18,527 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,533 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:51:18,545 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,551 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:51:18,554 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:51:18,559 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:51:18,590 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,595 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:51:18,626 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,630 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:51:18,634 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:51:18,638 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:51:18,667 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,673 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:51:18,703 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,707 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:51:18,711 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:51:18,714 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:51:18,769 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,775 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:51:18,830 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,836 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:51:18,840 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:51:18,843 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:51:18,878 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,886 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:51:18,919 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,923 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:51:18,927 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:51:18,930 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:51:18,960 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:18,965 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:51:18,995 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:51:19,000 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:51:19,004 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:51:19,007 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 10:51:19,188 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 10:51:19,334 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 10:51:19,464 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 10:51:19,601 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:51:19,622 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:51:19,644 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:51:19,664 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:51:19,671 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:51:19,675 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:51:19,678 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:51:19,692 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,697 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:51:19,709 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,714 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:51:19,719 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:51:19,722 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:51:19,736 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,740 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:51:19,755 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,759 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:51:19,763 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:51:19,767 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:51:19,791 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:51:19,799 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:51:19,821 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:51:19,827 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:51:19,830 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:51:19,834 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:51:19,845 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:51:19,850 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:51:19,863 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:51:19,867 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:51:19,871 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:51:19,875 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:51:19,887 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,894 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:51:19,906 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,911 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:51:19,915 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:51:19,919 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:51:19,929 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:51:19,935 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:51:19,944 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:51:19,949 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:51:19,952 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:51:19,956 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:51:19,970 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,974 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:51:19,987 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:19,992 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:51:19,996 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:51:20,000 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:51:20,020 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:51:20,026 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:51:20,045 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:51:20,055 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:51:20,060 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:51:20,063 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:51:20,073 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:20,080 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:51:20,090 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:20,094 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:51:20,098 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:51:20,102 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:51:20,114 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:20,118 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:51:20,127 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:20,132 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:51:20,135 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:51:20,139 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:51:20,149 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:20,153 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:51:20,162 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:51:20,169 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:51:20,172 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:51:20,175 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 10:51:20,378 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 10:51:20,800 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 10:51:21,139 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 10:51:21,142 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 10:51:21,148 INFO  AppFacade - Rejestracja typów
2014-10-24 10:51:21,157 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 10:51:21,161 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 10:51:21,165 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 10:51:21,189 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 10:51:21,210 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 10:51:21,261 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 10:51:21,267 ERROR ChangeTracker - Error during deserialization
System.InvalidOperationException: There is an error in XML document (0, 0). ---> System.Xml.XmlException: Root element is missing.
   at System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo(String res)
   at System.Xml.XmlTextReaderImpl.ParseDocumentContent()
   at System.Xml.XmlReader.MoveToContent()
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderChangeTracker.Read5_ChangeTracker()
   --- End of inner exception stack trace ---
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
   at DnDHelper.Domain.ChangeTracker.get_Instance() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\ChangeTracker.cs:line 41
2014-10-24 10:51:21,270 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 10:51:21,277 INFO  AppFacade - Typy zarejestrowano
2014-10-24 10:51:21,282 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 10:51:21,299 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 10:51:21,304 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 10:51:21,333 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:51:21,611 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 10:51:24,691 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:51:24,714 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 5[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-24 10:51:24,722 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:51:24,725 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:51:24,729 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Skakanie : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:51:24,733 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +3 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:51:24,738 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +3 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:51:24,742 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 3, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:51:24,745 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +3 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:51:24,749 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 5, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-24 10:51:24,754 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:51:24,757 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:51:24,760 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:51:24,764 DEBUG CharacterController - Helios: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Sztuka przetrwania : +1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:51:24,775 DEBUG CharacterController - Helios: Zwiêkszono wartoœæ skilla Wspinaczka o 5
2014-10-24 10:51:24,778 DEBUG CharacterController - Helios: Zwiêkszono wartoœæ skilla P³ywanie o 5
2014-10-24 10:51:24,782 DEBUG CharacterController - Helios: Zwiêkszono wartoœæ skilla Skakanie o 5
2014-10-24 10:51:24,788 DEBUG CharacterController - Helios: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 1
2014-10-24 10:51:24,798 DEBUG CharacterController - Helios: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 1
2014-10-24 10:51:24,801 DEBUG CharacterController - Helios: Zwiêkszono wartoœæ skilla Sztuka przetrwania o 1
2014-10-24 10:51:26,292 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:51:26,500 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:51:26,504 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:51:28,042 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:51:31,324 INFO  BriefServiceQueueManager - Wys³ano: 4 briefów, 0 enemy briefów
2014-10-24 10:51:31,406 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:52:11,791 INFO  ChangeTracker - All changes saved
2014-10-24 10:53:49,068 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 10:53:49,272 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 10:53:49,429 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:53:49,464 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:53:50,088 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:53:50,133 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:53:50,177 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:53:50,181 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:53:50,184 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:53:50,217 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,224 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:53:50,259 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,265 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:53:50,269 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:53:50,272 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:53:50,285 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,292 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:53:50,304 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,309 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:53:50,312 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:53:50,316 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:53:50,343 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,349 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:53:50,376 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,382 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:53:50,385 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:53:50,389 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:53:50,418 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,422 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:53:50,452 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,457 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:53:50,460 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:53:50,464 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:53:50,519 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,523 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:53:50,580 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,584 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:53:50,588 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:53:50,592 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:53:50,626 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,632 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:53:50,666 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,670 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:53:50,674 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:53:50,678 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:53:50,706 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,711 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:53:50,739 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:53:50,744 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:53:50,747 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:53:50,751 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 10:53:50,937 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 10:53:51,090 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 10:53:51,223 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 10:53:51,360 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:53:51,384 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:53:51,405 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:53:51,424 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:53:51,431 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:53:51,434 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:53:51,438 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:53:51,452 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,457 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:53:51,468 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,472 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:53:51,477 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:53:51,480 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:53:51,494 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,498 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:53:51,512 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,516 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:53:51,520 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:53:51,523 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:53:51,546 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:53:51,553 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:53:51,575 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:53:51,580 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:53:51,583 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:53:51,587 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:53:51,599 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:53:51,603 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:53:51,615 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:53:51,620 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:53:51,623 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:53:51,627 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:53:51,639 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,645 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:53:51,658 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,662 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:53:51,666 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:53:51,669 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:53:51,679 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:53:51,684 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:53:51,693 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:53:51,698 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:53:51,701 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:53:51,705 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:53:51,718 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,722 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:53:51,734 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,739 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:53:51,743 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:53:51,747 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:53:51,767 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:53:51,772 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:53:51,792 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:53:51,801 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:53:51,805 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:53:51,809 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:53:51,819 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,824 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:53:51,834 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,838 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:53:51,842 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:53:51,845 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:53:51,855 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,859 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:53:51,868 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,872 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:53:51,876 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:53:51,880 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:53:51,889 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,894 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:53:51,903 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:53:51,907 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:53:51,912 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:53:51,916 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 10:53:52,105 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 10:53:52,483 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 10:53:52,781 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 10:53:52,785 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 10:53:52,790 INFO  AppFacade - Rejestracja typów
2014-10-24 10:53:52,795 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 10:53:52,798 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 10:53:52,808 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 10:53:52,814 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 10:53:52,843 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 10:53:52,854 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 10:53:52,859 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 10:53:52,863 INFO  AppFacade - Typy zarejestrowano
2014-10-24 10:53:52,868 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 10:53:52,882 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 10:53:52,886 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 10:53:52,910 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:53:53,160 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 10:53:55,804 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:53:55,811 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +1 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:53:55,815 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 1, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:53:55,822 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:53:55,826 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 2, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-24 10:53:55,830 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Kondycja Premia do umiejêtnoœci: Koncentracja : +2 (Cecha g³ówna - Kondycja)
2014-10-24 10:53:55,834 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Czaroznastwo : +3 (Cecha g³ówna - Inteligencja)
2014-10-24 10:53:55,838 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Stosowanie mag. urz¹dzeñ : +3 (Cecha g³ówna - Inteligencja)
2014-10-24 10:53:55,841 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:53:55,845 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:53:55,849 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +2 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:53:55,853 DEBUG CharacterController - Mag6: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Dyplomacja : +1 (Cecha g³ówna - Charyzma)
2014-10-24 10:53:55,859 DEBUG CharacterController - Mag6: Zwiêkszono wartoœæ skilla Koncentracja o 2
2014-10-24 10:53:55,863 DEBUG CharacterController - Mag6: Zwiêkszono wartoœæ skilla Czaroznastwo o 3
2014-10-24 10:53:55,866 DEBUG CharacterController - Mag6: Zwiêkszono wartoœæ skilla Stosowanie mag. urz¹dzeñ o 3
2014-10-24 10:53:55,870 DEBUG CharacterController - Mag6: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 2
2014-10-24 10:53:55,873 DEBUG CharacterController - Mag6: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-24 10:53:55,880 DEBUG CharacterController - Mag6: Zwiêkszono wartoœæ skilla Dyplomacja o 1
2014-10-24 10:53:57,259 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:56:41,434 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 10:56:41,624 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 10:56:41,784 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:56:41,820 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:56:42,437 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 10:56:42,479 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 10:56:42,523 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:56:42,527 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 10:56:42,531 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:56:42,566 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,573 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 10:56:42,607 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,613 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:56:42,618 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 10:56:42,621 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:56:42,635 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,642 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 10:56:42,654 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,659 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:56:42,663 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 10:56:42,667 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:56:42,695 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,700 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 10:56:42,731 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,736 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:56:42,740 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 10:56:42,744 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:56:42,774 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,779 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 10:56:42,818 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,822 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:56:42,826 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 10:56:42,830 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:56:42,886 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,893 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 10:56:42,952 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:42,957 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:56:42,961 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 10:56:42,966 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:56:43,017 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:43,031 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 10:56:43,080 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:43,086 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:56:43,091 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 10:56:43,095 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:56:43,126 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:43,131 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 10:56:43,161 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 10:56:43,167 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:56:43,170 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 10:56:43,174 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 10:56:43,356 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 10:56:43,499 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 10:56:43,627 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 10:56:43,744 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:56:43,767 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:56:43,788 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 10:56:43,809 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:56:43,816 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:56:43,819 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 10:56:43,822 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:56:43,835 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:43,841 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 10:56:43,853 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:43,858 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:56:43,861 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 10:56:43,865 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:56:43,879 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:43,885 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 10:56:43,900 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:43,905 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:56:43,909 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 10:56:43,912 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:56:43,934 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:56:43,945 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 10:56:43,966 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 10:56:43,970 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:56:43,975 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 10:56:43,978 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:56:43,989 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:56:43,994 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 10:56:44,012 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 10:56:44,017 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:56:44,020 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 10:56:44,025 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:56:44,037 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,043 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 10:56:44,055 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,059 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:56:44,064 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 10:56:44,067 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:56:44,076 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:56:44,082 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 10:56:44,093 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 10:56:44,098 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:56:44,102 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 10:56:44,106 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:56:44,119 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,123 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 10:56:44,136 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,142 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:56:44,145 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 10:56:44,149 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:56:44,170 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:56:44,174 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 10:56:44,196 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 10:56:44,205 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:56:44,209 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 10:56:44,212 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:56:44,222 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,229 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 10:56:44,239 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,244 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:56:44,247 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 10:56:44,251 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:56:44,262 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,267 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 10:56:44,277 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,282 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:56:44,285 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 10:56:44,289 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:56:44,300 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,304 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 10:56:44,314 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 10:56:44,329 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:56:44,333 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 10:56:44,337 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 10:56:44,526 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 10:56:44,949 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 10:56:45,254 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 10:56:45,257 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 10:56:45,263 INFO  AppFacade - Rejestracja typów
2014-10-24 10:56:45,267 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 10:56:45,270 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 10:56:45,274 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 10:56:45,291 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 10:56:45,318 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 10:56:45,330 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 10:56:45,339 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 10:56:45,343 INFO  AppFacade - Typy zarejestrowano
2014-10-24 10:56:45,348 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 10:56:45,361 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 10:56:45,364 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 10:56:45,388 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:56:45,631 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 10:56:48,829 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +2 (Cecha g³ówna - Si³a)
2014-10-24 10:56:48,834 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +4 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:56:48,838 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +4 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:56:48,843 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 4, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:56:48,846 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +4 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:56:48,850 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ukrywanie siê : +4 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:56:48,854 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ciche poruszanie siê : +4 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:56:48,857 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 2, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-24 10:56:48,861 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:56:48,866 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:56:48,871 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Sztuka przetrwania : +1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:56:48,874 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +1 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:56:48,879 DEBUG CharacterController - Keningsen: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Dyplomacja : +2 (Cecha g³ówna - Charyzma)
2014-10-24 10:56:48,888 DEBUG CharacterController - Keningsen: Zwiêkszono wartoœæ skilla Ukrywanie siê o 4
2014-10-24 10:56:48,893 DEBUG CharacterController - Keningsen: Zwiêkszono wartoœæ skilla Ciche poruszanie siê o 4
2014-10-24 10:56:48,899 DEBUG CharacterController - Keningsen: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 1
2014-10-24 10:56:48,903 DEBUG CharacterController - Keningsen: Zwiêkszono wartoœæ skilla Sztuka przetrwania o 1
2014-10-24 10:56:48,906 DEBUG CharacterController - Keningsen: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 1
2014-10-24 10:56:48,910 DEBUG CharacterController - Keningsen: Zwiêkszono wartoœæ skilla Dyplomacja o 2
2014-10-24 10:57:01,545 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:57:05,698 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:10,716 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:12,898 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:57:16,097 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:57:16,164 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:21,184 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:26,208 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:31,228 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:36,247 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:38,628 DEBUG CharacterController - Adam: Zwiêkszono wartoœæ wspó³czynnika Strength (Bie¿¹cego) o 2
2014-10-24 10:57:38,731 DEBUG CharacterController - Adam: Dodano Bonus - Atut: Premia do KP (mnich) Premia do KP : +5 (Naturalny pancerz) (Atut: Premia do KP (mnich))
2014-10-24 10:57:38,735 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:57:38,756 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 5[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-24 10:57:38,760 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:57:38,764 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +5 (Cecha g³ówna - Si³a)
2014-10-24 10:57:38,767 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +3 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:57:38,772 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +3 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:57:38,775 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 3, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:57:38,779 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +3 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:57:38,783 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ciche poruszanie siê : +3 (Cecha g³ówna - Zrêcznoœæ)
2014-10-24 10:57:38,786 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 2, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-24 10:57:38,791 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 3 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:57:38,794 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +3 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:57:38,798 DEBUG CharacterController - Adam: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +3 (Cecha g³ówna - M¹droœæ)
2014-10-24 10:57:38,807 DEBUG CharacterController - Adam: Zwiêkszono wartoœæ skilla P³ywanie o 5
2014-10-24 10:57:38,811 DEBUG CharacterController - Adam: Zwiêkszono wartoœæ skilla Wspinaczka o 5
2014-10-24 10:57:38,815 DEBUG CharacterController - Adam: Zwiêkszono wartoœæ skilla Ciche poruszanie siê o 3
2014-10-24 10:57:38,818 DEBUG CharacterController - Adam: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 3
2014-10-24 10:57:38,822 DEBUG CharacterController - Adam: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 3
2014-10-24 10:57:41,065 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:57:41,075 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:57:41,250 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:57:41,261 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:57:41,322 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:41,441 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:57:41,445 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 10:57:41,625 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:57:41,802 DEBUG CharacterController - otrzymano 1 obra¿eñ
2014-10-24 10:57:46,340 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 10:57:46,419 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:51,439 INFO  ChangeTracker - All changes saved
2014-10-24 10:57:56,461 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:01,482 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:06,504 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:11,524 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:16,545 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:21,570 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:26,594 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:31,604 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:36,625 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:41,645 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:46,654 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:51,673 INFO  ChangeTracker - All changes saved
2014-10-24 10:58:56,693 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:01,712 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:06,726 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:11,746 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:16,764 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:20,026 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: ItemDefinition
2014-10-24 10:59:20,029 INFO  AppFacade - Dodano przedmiot: Bu³awa
2014-10-24 10:59:21,780 INFO  AdvancedQueueManager - Zapisano repozytorium: ItemDefinition
2014-10-24 10:59:21,835 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:26,863 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:31,884 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:36,904 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:41,929 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:42,708 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: ItemDefinition
2014-10-24 10:59:42,712 INFO  AppFacade - Usuniêto przedmiot: Bu³awa
2014-10-24 10:59:46,952 INFO  AdvancedQueueManager - Zapisano repozytorium: ItemDefinition
2014-10-24 10:59:46,982 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:52,000 INFO  ChangeTracker - All changes saved
2014-10-24 10:59:57,022 INFO  ChangeTracker - All changes saved
2014-10-24 11:00:02,043 INFO  ChangeTracker - All changes saved
2014-10-24 14:56:29,881 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 14:56:30,079 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 14:56:30,250 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 14:56:30,289 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 14:56:30,974 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 14:56:31,007 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 14:56:31,056 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 14:56:31,060 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 14:56:31,064 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 14:56:31,101 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,108 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 14:56:31,142 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,148 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 14:56:31,152 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 14:56:31,156 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 14:56:31,170 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,176 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 14:56:31,189 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,194 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 14:56:31,197 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 14:56:31,200 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 14:56:31,231 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,236 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 14:56:31,263 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,267 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 14:56:31,271 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 14:56:31,275 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 14:56:31,306 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,311 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 14:56:31,345 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,349 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 14:56:31,352 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 14:56:31,356 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 14:56:31,413 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,419 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 14:56:31,474 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,479 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 14:56:31,482 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 14:56:31,485 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 14:56:31,519 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,527 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 14:56:31,560 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,565 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 14:56:31,568 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 14:56:31,573 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 14:56:31,604 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,609 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 14:56:31,639 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:56:31,644 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 14:56:31,647 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 14:56:31,651 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 14:56:31,838 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 14:56:31,986 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 14:56:32,119 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 14:56:32,270 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 14:56:32,294 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:56:32,318 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 14:56:32,338 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:56:32,345 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 14:56:32,348 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 14:56:32,352 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 14:56:32,364 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,371 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 14:56:32,384 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,388 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 14:56:32,391 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 14:56:32,395 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 14:56:32,409 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,414 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 14:56:32,427 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,432 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 14:56:32,436 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 14:56:32,439 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 14:56:32,462 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 14:56:32,471 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 14:56:32,493 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 14:56:32,497 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 14:56:32,501 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 14:56:32,505 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 14:56:32,517 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 14:56:32,521 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 14:56:32,532 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 14:56:32,537 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 14:56:32,541 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 14:56:32,545 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 14:56:32,562 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,567 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 14:56:32,583 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,588 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 14:56:32,592 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 14:56:32,596 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 14:56:32,605 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 14:56:32,611 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 14:56:32,621 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 14:56:32,626 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 14:56:32,629 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 14:56:32,633 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 14:56:32,649 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,655 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 14:56:32,670 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,674 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 14:56:32,678 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 14:56:32,682 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 14:56:32,702 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:56:32,707 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 14:56:32,731 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:56:32,748 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 14:56:32,751 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 14:56:32,755 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 14:56:32,765 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,770 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 14:56:32,782 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,786 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 14:56:32,789 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 14:56:32,793 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 14:56:32,802 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,807 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 14:56:32,816 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,821 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 14:56:32,824 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 14:56:32,828 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 14:56:32,839 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,845 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 14:56:32,855 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:56:32,860 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 14:56:32,864 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 14:56:32,869 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 14:56:33,046 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 14:56:33,452 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 14:56:33,747 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 14:56:33,751 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 14:56:33,756 INFO  AppFacade - Rejestracja typów
2014-10-24 14:56:33,760 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 14:56:33,764 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 14:56:33,768 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 14:56:33,777 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 14:56:33,808 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 14:56:33,820 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 14:56:33,826 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 14:56:33,830 INFO  AppFacade - Typy zarejestrowano
2014-10-24 14:56:33,836 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 14:56:33,853 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 14:56:33,885 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 14:56:33,888 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 14:56:34,149 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 14:56:38,858 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 14:58:09,835 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 14:58:10,008 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 14:58:10,172 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 14:58:10,209 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 14:58:10,923 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 14:58:10,957 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 14:58:11,008 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 14:58:11,012 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 14:58:11,016 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 14:58:11,054 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,061 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 14:58:11,096 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,102 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 14:58:11,106 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 14:58:11,110 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 14:58:11,124 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,130 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 14:58:11,144 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,149 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 14:58:11,153 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 14:58:11,157 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 14:58:11,187 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,193 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 14:58:11,227 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,234 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 14:58:11,238 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 14:58:11,242 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 14:58:11,272 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,276 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 14:58:11,306 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,310 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 14:58:11,313 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 14:58:11,317 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 14:58:11,378 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,385 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 14:58:11,456 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,462 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 14:58:11,466 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 14:58:11,470 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 14:58:11,509 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,514 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 14:58:11,548 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,554 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 14:58:11,559 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 14:58:11,564 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 14:58:11,596 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,601 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 14:58:11,629 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:58:11,634 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 14:58:11,637 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 14:58:11,641 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 14:58:11,808 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 14:58:12,095 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 14:58:12,237 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 14:58:12,381 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 14:58:12,406 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:58:12,433 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 14:58:12,458 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:58:12,467 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 14:58:12,471 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 14:58:12,475 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 14:58:12,487 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,494 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 14:58:12,506 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,511 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 14:58:12,515 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 14:58:12,518 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 14:58:12,532 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,537 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 14:58:12,552 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,557 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 14:58:12,561 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 14:58:12,565 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 14:58:12,586 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 14:58:12,595 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 14:58:12,617 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 14:58:12,622 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 14:58:12,625 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 14:58:12,630 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 14:58:12,641 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 14:58:12,647 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 14:58:12,658 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 14:58:12,663 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 14:58:12,667 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 14:58:12,670 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 14:58:12,683 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,688 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 14:58:12,701 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,706 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 14:58:12,709 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 14:58:12,715 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 14:58:12,727 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 14:58:12,733 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 14:58:12,743 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 14:58:12,748 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 14:58:12,751 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 14:58:12,755 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 14:58:12,768 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,773 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 14:58:12,785 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,790 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 14:58:12,793 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 14:58:12,798 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 14:58:12,818 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:58:12,823 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 14:58:12,844 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:58:12,870 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 14:58:12,874 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 14:58:12,878 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 14:58:12,887 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,893 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 14:58:12,904 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,909 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 14:58:12,912 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 14:58:12,916 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 14:58:12,928 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,932 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 14:58:12,942 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,946 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 14:58:12,950 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 14:58:12,953 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 14:58:12,963 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,968 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 14:58:12,977 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:58:12,981 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 14:58:12,984 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 14:58:12,989 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 14:58:13,167 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 14:58:13,552 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 14:58:13,899 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 14:58:13,903 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 14:58:13,909 INFO  AppFacade - Rejestracja typów
2014-10-24 14:58:13,914 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 14:58:13,918 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 14:58:13,923 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 14:58:13,929 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 14:58:13,958 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 14:58:13,967 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 14:58:13,977 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 14:58:13,980 INFO  AppFacade - Typy zarejestrowano
2014-10-24 14:58:13,986 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 14:58:14,001 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 14:58:14,026 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 14:58:14,030 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 14:58:14,253 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 14:58:18,997 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 14:59:27,691 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 14:59:27,867 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 14:59:28,014 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 14:59:28,052 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 14:59:28,712 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 14:59:28,747 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 14:59:28,791 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 14:59:28,795 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 14:59:28,798 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 14:59:28,833 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:28,840 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 14:59:28,878 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:28,884 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 14:59:28,888 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 14:59:28,891 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 14:59:28,905 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:28,912 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 14:59:28,925 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:28,931 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 14:59:28,935 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 14:59:28,940 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 14:59:28,970 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:28,975 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 14:59:29,004 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,010 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 14:59:29,013 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 14:59:29,017 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 14:59:29,060 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,065 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 14:59:29,095 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,100 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 14:59:29,103 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 14:59:29,106 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 14:59:29,164 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,170 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 14:59:29,224 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,229 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 14:59:29,232 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 14:59:29,236 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 14:59:29,269 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,276 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 14:59:29,310 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,316 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 14:59:29,321 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 14:59:29,326 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 14:59:29,356 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,360 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 14:59:29,391 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 14:59:29,397 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 14:59:29,400 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 14:59:29,404 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 14:59:29,593 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 14:59:29,735 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 14:59:29,857 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 14:59:29,980 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 14:59:30,003 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:59:30,024 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 14:59:30,044 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:59:30,051 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 14:59:30,054 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 14:59:30,058 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 14:59:30,072 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,079 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 14:59:30,092 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,097 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 14:59:30,100 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 14:59:30,104 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 14:59:30,120 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,125 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 14:59:30,140 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,146 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 14:59:30,149 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 14:59:30,153 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 14:59:30,175 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 14:59:30,188 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 14:59:30,210 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 14:59:30,214 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 14:59:30,219 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 14:59:30,222 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 14:59:30,234 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 14:59:30,238 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 14:59:30,251 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 14:59:30,255 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 14:59:30,259 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 14:59:30,263 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 14:59:30,276 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,281 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 14:59:30,295 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,300 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 14:59:30,304 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 14:59:30,308 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 14:59:30,318 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 14:59:30,323 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 14:59:30,332 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 14:59:30,337 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 14:59:30,340 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 14:59:30,344 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 14:59:30,357 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,361 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 14:59:30,375 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,380 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 14:59:30,384 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 14:59:30,389 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 14:59:30,409 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:59:30,414 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 14:59:30,435 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 14:59:30,447 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 14:59:30,450 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 14:59:30,454 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 14:59:30,464 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,469 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 14:59:30,480 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,484 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 14:59:30,488 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 14:59:30,491 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 14:59:30,500 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,505 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 14:59:30,515 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,519 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 14:59:30,522 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 14:59:30,526 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 14:59:30,536 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,540 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 14:59:30,551 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 14:59:30,556 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 14:59:30,559 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 14:59:30,563 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 14:59:30,753 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 14:59:31,189 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 14:59:31,520 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 14:59:31,524 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 14:59:31,530 INFO  AppFacade - Rejestracja typów
2014-10-24 14:59:31,534 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 14:59:31,538 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 14:59:31,542 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 14:59:31,558 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 14:59:31,575 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 14:59:31,584 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 14:59:31,588 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 14:59:31,592 INFO  AppFacade - Typy zarejestrowano
2014-10-24 14:59:31,597 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 14:59:31,612 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 14:59:31,640 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 14:59:31,643 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 14:59:31,871 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 14:59:36,618 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:04:17,888 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:04:18,077 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:04:18,215 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:04:18,255 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:04:18,925 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:04:18,970 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:04:19,015 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:04:19,018 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:04:19,022 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:04:19,065 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,071 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:04:19,111 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,117 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:04:19,121 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:04:19,124 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:04:19,138 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,144 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:04:19,159 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,164 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:04:19,168 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:04:19,172 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:04:19,203 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,208 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:04:19,239 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,245 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:04:19,250 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:04:19,254 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:04:19,288 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,294 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:04:19,327 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,333 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:04:19,337 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:04:19,340 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:04:19,401 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,407 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:04:19,463 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,468 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:04:19,471 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:04:19,475 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:04:19,507 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,513 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:04:19,548 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,555 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:04:19,558 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:04:19,562 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:04:19,591 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,596 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:04:19,628 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:04:19,632 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:04:19,636 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:04:19,639 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:04:19,825 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:04:19,969 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:04:20,088 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:04:20,200 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:04:20,231 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:04:20,253 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:04:20,275 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:04:20,281 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:04:20,285 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:04:20,289 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:04:20,301 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,307 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:04:20,319 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,324 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:04:20,328 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:04:20,332 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:04:20,348 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,353 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:04:20,369 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,374 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:04:20,378 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:04:20,382 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:04:20,407 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:04:20,414 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:04:20,439 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:04:20,450 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:04:20,454 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:04:20,458 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:04:20,469 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:04:20,474 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:04:20,486 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:04:20,490 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:04:20,494 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:04:20,498 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:04:20,513 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,517 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:04:20,531 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,537 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:04:20,542 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:04:20,545 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:04:20,555 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:04:20,560 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:04:20,572 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:04:20,577 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:04:20,581 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:04:20,586 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:04:20,598 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,604 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:04:20,617 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,626 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:04:20,629 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:04:20,633 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:04:20,656 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:04:20,660 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:04:20,682 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:04:20,695 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:04:20,698 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:04:20,701 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:04:20,711 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,717 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:04:20,728 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,732 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:04:20,736 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:04:20,740 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:04:20,749 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,754 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:04:20,763 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,768 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:04:20,772 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:04:20,776 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:04:20,785 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,790 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:04:20,800 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:04:20,805 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:04:20,809 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:04:20,813 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:04:20,988 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:04:21,356 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:04:21,641 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:04:21,650 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:04:21,656 INFO  AppFacade - Rejestracja typów
2014-10-24 15:04:21,661 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:04:21,666 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:04:21,671 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:04:21,678 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:04:21,704 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:04:21,715 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:04:21,721 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:04:21,724 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:04:21,729 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:04:21,744 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:04:21,770 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:04:21,774 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:04:22,016 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:04:26,740 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:11:51,007 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:11:51,178 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:11:51,319 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:11:51,358 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:11:52,052 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:11:52,085 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:11:52,131 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:11:52,135 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:11:52,141 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:11:52,180 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,187 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:11:52,220 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,226 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:11:52,230 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:11:52,234 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:11:52,250 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,257 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:11:52,270 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,276 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:11:52,280 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:11:52,284 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:11:52,312 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,317 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:11:52,346 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,350 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:11:52,354 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:11:52,358 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:11:52,389 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,395 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:11:52,430 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,435 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:11:52,439 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:11:52,443 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:11:52,505 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,512 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:11:52,568 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,573 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:11:52,577 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:11:52,580 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:11:52,616 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,622 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:11:52,656 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,661 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:11:52,665 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:11:52,669 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:11:52,698 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,702 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:11:52,730 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:11:52,736 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:11:52,739 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:11:52,742 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:11:52,936 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:11:53,079 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:11:53,211 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:11:53,336 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:11:53,361 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:11:53,389 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:11:53,413 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:11:53,419 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:11:53,423 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:11:53,426 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:11:53,439 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,445 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:11:53,459 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,463 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:11:53,467 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:11:53,471 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:11:53,486 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,491 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:11:53,505 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,510 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:11:53,514 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:11:53,518 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:11:53,540 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:11:53,549 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:11:53,571 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:11:53,576 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:11:53,580 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:11:53,586 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:11:53,598 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:11:53,602 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:11:53,615 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:11:53,620 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:11:53,624 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:11:53,627 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:11:53,640 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,645 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:11:53,659 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,663 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:11:53,667 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:11:53,671 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:11:53,681 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:11:53,686 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:11:53,697 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:11:53,702 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:11:53,705 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:11:53,711 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:11:53,727 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,731 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:11:53,746 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,750 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:11:53,754 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:11:53,759 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:11:53,784 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:11:53,789 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:11:53,813 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:11:53,836 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:11:53,840 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:11:53,844 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:11:53,857 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,862 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:11:53,874 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,881 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:11:53,885 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:11:53,891 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:11:53,903 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,908 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:11:53,921 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,926 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:11:53,930 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:11:53,934 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:11:53,945 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,949 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:11:53,961 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:11:53,965 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:11:53,968 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:11:53,974 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:11:54,178 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:11:54,587 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:11:54,914 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:11:54,918 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:11:54,925 INFO  AppFacade - Rejestracja typów
2014-10-24 15:11:54,931 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:11:54,935 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:11:54,939 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:11:54,946 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:11:54,978 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:11:54,990 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:11:55,000 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:11:55,003 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:11:55,009 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:11:55,026 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:11:55,052 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:11:55,056 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:11:55,286 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:12:01,000 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:13:47,982 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:13:48,146 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:13:48,284 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:13:48,320 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:13:48,952 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:13:48,986 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:13:49,030 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:13:49,034 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:13:49,038 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:13:49,073 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,080 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:13:49,113 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,118 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:13:49,122 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:13:49,126 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:13:49,139 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,146 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:13:49,158 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,163 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:13:49,167 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:13:49,170 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:13:49,198 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,203 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:13:49,232 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,237 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:13:49,241 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:13:49,244 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:13:49,273 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,278 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:13:49,308 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,313 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:13:49,316 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:13:49,320 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:13:49,374 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,380 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:13:49,436 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,441 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:13:49,444 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:13:49,448 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:13:49,480 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,486 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:13:49,520 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,524 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:13:49,529 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:13:49,532 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:13:49,561 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,565 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:13:49,593 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:13:49,599 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:13:49,603 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:13:49,606 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:13:49,787 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:13:49,919 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:13:50,030 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:13:50,141 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:13:50,164 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:13:50,185 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:13:50,205 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:13:50,212 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:13:50,215 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:13:50,219 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:13:50,231 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,237 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:13:50,249 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,253 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:13:50,256 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:13:50,260 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:13:50,274 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,279 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:13:50,292 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,297 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:13:50,302 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:13:50,306 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:13:50,329 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:13:50,338 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:13:50,362 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:13:50,367 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:13:50,370 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:13:50,375 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:13:50,388 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:13:50,392 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:13:50,404 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:13:50,409 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:13:50,413 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:13:50,417 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:13:50,431 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,436 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:13:50,449 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,454 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:13:50,457 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:13:50,461 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:13:50,470 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:13:50,475 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:13:50,484 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:13:50,488 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:13:50,492 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:13:50,495 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:13:50,509 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,514 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:13:50,527 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,531 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:13:50,534 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:13:50,539 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:13:50,559 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:13:50,564 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:13:50,585 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:13:50,601 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:13:50,604 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:13:50,608 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:13:50,618 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,623 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:13:50,635 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,639 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:13:50,643 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:13:50,647 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:13:50,657 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,662 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:13:50,673 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,677 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:13:50,681 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:13:50,684 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:13:50,695 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,700 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:13:50,710 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:13:50,715 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:13:50,719 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:13:50,723 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:13:50,896 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:13:51,219 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:13:51,523 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:13:51,527 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:13:51,532 INFO  AppFacade - Rejestracja typów
2014-10-24 15:13:51,536 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:13:51,540 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:13:51,544 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:13:51,550 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:13:51,575 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:13:51,585 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:13:51,593 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:13:51,597 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:13:51,602 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:13:51,617 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:13:51,641 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:13:51,644 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:13:51,862 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:13:57,285 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:15:18,967 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:15:19,208 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:15:19,369 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:15:19,409 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:15:20,091 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:15:20,127 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:15:20,174 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:15:20,178 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:15:20,183 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:15:20,223 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,230 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:15:20,262 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,268 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:15:20,272 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:15:20,275 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:15:20,290 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,296 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:15:20,312 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,318 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:15:20,322 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:15:20,325 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:15:20,360 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,365 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:15:20,400 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,405 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:15:20,410 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:15:20,414 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:15:20,444 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,448 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:15:20,479 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,484 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:15:20,488 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:15:20,492 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:15:20,552 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,558 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:15:20,618 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,624 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:15:20,627 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:15:20,631 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:15:20,665 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,672 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:15:20,708 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,712 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:15:20,718 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:15:20,722 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:15:20,755 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,760 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:15:20,793 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:15:20,798 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:15:20,801 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:15:20,805 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:15:20,986 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:15:21,117 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:15:21,482 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:15:21,621 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:15:21,646 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:15:21,669 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:15:21,689 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:15:21,696 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:15:21,699 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:15:21,703 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:15:21,716 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,722 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:15:21,734 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,738 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:15:21,742 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:15:21,745 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:15:21,760 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,764 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:15:21,778 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,783 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:15:21,787 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:15:21,790 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:15:21,812 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:15:21,821 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:15:21,843 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:15:21,848 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:15:21,852 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:15:21,856 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:15:21,867 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:15:21,872 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:15:21,883 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:15:21,889 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:15:21,892 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:15:21,896 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:15:21,909 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,913 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:15:21,926 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,931 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:15:21,934 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:15:21,937 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:15:21,947 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:15:21,952 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:15:21,961 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:15:21,965 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:15:21,968 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:15:21,972 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:15:21,985 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:21,991 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:15:22,007 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,011 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:15:22,014 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:15:22,019 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:15:22,042 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:15:22,047 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:15:22,070 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:15:22,083 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:15:22,087 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:15:22,091 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:15:22,101 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,109 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:15:22,119 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,124 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:15:22,127 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:15:22,131 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:15:22,142 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,147 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:15:22,156 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,161 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:15:22,164 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:15:22,168 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:15:22,180 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,184 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:15:22,195 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:15:22,200 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:15:22,204 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:15:22,210 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:15:22,408 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:15:22,778 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:15:23,108 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:15:23,112 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:15:23,117 INFO  AppFacade - Rejestracja typów
2014-10-24 15:15:23,122 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:15:23,126 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:15:23,130 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:15:23,136 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:15:23,163 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:15:23,193 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:15:23,202 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:15:23,206 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:15:23,211 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:15:23,225 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:15:23,250 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:15:23,254 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:15:23,475 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:17:25,937 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:17:26,183 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:17:26,335 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:17:26,376 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:17:27,036 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:17:27,069 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:17:27,113 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:17:27,116 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:17:27,120 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:17:27,155 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,162 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:17:27,196 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,201 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:17:27,205 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:17:27,208 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:17:27,222 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,228 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:17:27,240 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,245 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:17:27,248 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:17:27,252 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:17:27,280 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,285 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:17:27,312 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,317 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:17:27,321 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:17:27,324 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:17:27,352 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,357 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:17:27,387 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,392 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:17:27,395 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:17:27,399 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:17:27,452 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,458 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:17:27,513 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,518 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:17:27,521 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:17:27,525 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:17:27,557 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,563 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:17:27,598 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,603 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:17:27,608 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:17:27,612 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:17:27,643 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,648 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:17:27,679 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:17:27,684 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:17:27,688 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:17:27,692 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:17:27,860 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:17:27,994 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:17:28,107 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:17:28,233 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:17:28,255 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:17:28,276 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:17:28,298 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:17:28,304 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:17:28,307 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:17:28,312 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:17:28,323 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,328 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:17:28,341 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,346 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:17:28,350 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:17:28,354 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:17:28,368 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,372 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:17:28,386 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,391 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:17:28,396 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:17:28,399 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:17:28,423 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:17:28,433 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:17:28,455 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:17:28,459 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:17:28,463 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:17:28,467 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:17:28,479 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:17:28,483 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:17:28,494 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:17:28,499 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:17:28,503 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:17:28,506 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:17:28,519 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,524 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:17:28,537 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,542 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:17:28,545 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:17:28,549 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:17:28,560 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:17:28,566 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:17:28,578 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:17:28,583 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:17:28,587 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:17:28,591 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:17:28,606 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,611 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:17:28,624 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,629 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:17:28,633 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:17:28,638 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:17:28,661 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:17:28,665 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:17:28,691 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:17:28,708 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:17:28,712 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:17:28,716 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:17:28,728 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,733 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:17:28,747 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,751 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:17:28,755 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:17:28,758 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:17:28,771 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,776 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:17:28,785 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,790 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:17:28,794 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:17:28,798 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:17:28,809 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,815 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:17:28,824 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:17:28,829 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:17:28,832 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:17:28,836 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:17:29,028 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:17:29,421 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:17:29,739 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:17:29,743 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:17:29,748 INFO  AppFacade - Rejestracja typów
2014-10-24 15:17:29,753 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:17:29,756 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:17:29,760 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:17:29,766 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:17:29,791 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:17:29,804 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:17:29,808 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:17:29,812 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:17:29,817 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:17:29,832 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:17:29,856 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:17:29,862 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:17:30,095 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:20:01,759 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:20:06,628 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:21:56,148 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:22:59,933 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:23:00,119 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:23:00,269 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:23:00,307 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:23:00,976 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:23:01,011 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:23:01,061 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:23:01,065 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:23:01,068 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:23:01,107 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,114 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:23:01,155 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,162 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:23:01,166 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:23:01,170 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:23:01,183 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,190 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:23:01,203 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,208 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:23:01,211 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:23:01,215 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:23:01,248 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,253 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:23:01,285 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,291 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:23:01,297 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:23:01,300 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:23:01,337 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,342 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:23:01,383 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,390 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:23:01,395 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:23:01,401 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:23:01,459 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,465 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:23:01,531 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,536 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:23:01,539 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:23:01,543 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:23:01,581 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,589 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:23:01,627 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,631 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:23:01,636 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:23:01,640 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:23:01,669 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,674 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:23:01,708 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:23:01,713 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:23:01,717 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:23:01,720 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:23:01,904 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:23:02,038 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:23:02,154 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:23:02,267 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:23:02,290 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:23:02,311 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:23:02,332 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:23:02,339 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:23:02,342 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:23:02,347 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:23:02,360 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,367 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:23:02,379 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,384 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:23:02,387 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:23:02,391 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:23:02,406 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,411 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:23:02,425 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,430 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:23:02,434 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:23:02,437 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:23:02,462 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:23:02,471 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:23:02,493 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:23:02,498 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:23:02,501 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:23:02,505 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:23:02,518 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:23:02,522 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:23:02,533 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:23:02,539 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:23:02,543 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:23:02,547 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:23:02,560 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,565 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:23:02,578 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,583 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:23:02,587 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:23:02,590 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:23:02,599 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:23:02,604 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:23:02,614 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:23:02,618 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:23:02,622 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:23:02,625 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:23:02,638 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,643 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:23:02,657 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,661 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:23:02,665 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:23:02,669 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:23:02,692 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:23:02,696 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:23:02,718 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:23:02,737 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:23:02,740 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:23:02,745 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:23:02,755 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,760 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:23:02,773 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,779 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:23:02,783 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:23:02,786 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:23:02,795 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,801 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:23:02,810 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,816 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:23:02,820 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:23:02,824 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:23:02,835 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,840 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:23:02,850 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:23:02,855 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:23:02,858 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:23:02,862 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:23:03,051 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:23:03,435 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:23:03,736 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:23:03,740 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:23:03,745 INFO  AppFacade - Rejestracja typów
2014-10-24 15:23:03,750 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:23:03,754 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:23:03,758 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:23:03,790 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:23:03,800 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:23:03,810 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:23:03,815 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:23:03,819 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:23:03,824 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:23:03,841 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:23:03,868 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:23:03,874 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:23:04,115 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:23:11,711 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:23:11,731 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:24:17,533 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:24:17,708 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:24:17,863 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:24:17,902 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:24:18,575 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:24:18,608 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:24:18,654 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:24:18,658 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:24:18,661 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:24:18,699 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,707 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:24:18,743 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,748 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:24:18,752 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:24:18,755 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:24:18,771 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,779 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:24:18,793 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,797 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:24:18,801 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:24:18,805 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:24:18,833 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,838 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:24:18,865 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,871 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:24:18,874 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:24:18,878 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:24:18,908 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,913 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:24:18,942 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:18,947 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:24:18,950 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:24:18,954 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:24:19,010 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:19,016 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:24:19,071 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:19,076 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:24:19,079 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:24:19,083 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:24:19,117 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:19,123 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:24:19,158 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:19,163 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:24:19,167 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:24:19,171 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:24:19,201 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:19,205 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:24:19,237 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:24:19,242 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:24:19,247 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:24:19,251 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:24:19,421 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:24:19,552 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:24:19,664 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:24:19,787 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:24:19,810 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:24:19,832 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:24:19,852 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:24:19,860 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:24:19,863 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:24:19,867 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:24:19,883 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:19,888 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:24:19,901 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:19,906 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:24:19,911 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:24:19,916 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:24:19,931 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:19,937 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:24:19,953 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:19,958 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:24:19,962 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:24:19,966 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:24:19,992 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:24:20,000 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:24:20,023 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:24:20,027 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:24:20,031 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:24:20,034 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:24:20,046 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:24:20,050 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:24:20,062 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:24:20,067 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:24:20,071 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:24:20,075 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:24:20,088 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,092 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:24:20,106 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,110 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:24:20,114 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:24:20,117 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:24:20,126 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:24:20,132 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:24:20,143 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:24:20,147 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:24:20,151 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:24:20,155 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:24:20,167 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,173 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:24:20,185 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,189 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:24:20,193 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:24:20,196 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:24:20,217 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:24:20,221 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:24:20,243 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:24:20,265 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:24:20,268 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:24:20,272 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:24:20,284 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,289 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:24:20,299 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,304 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:24:20,307 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:24:20,311 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:24:20,321 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,325 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:24:20,335 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,340 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:24:20,343 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:24:20,348 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:24:20,357 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,362 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:24:20,371 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:24:20,377 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:24:20,381 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:24:20,384 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:24:20,573 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:24:20,963 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:24:21,265 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:24:21,269 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:24:21,274 INFO  AppFacade - Rejestracja typów
2014-10-24 15:24:21,279 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:24:21,284 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:24:21,288 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:24:21,294 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:24:21,325 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:24:21,334 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:24:21,339 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:24:21,342 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:24:21,348 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:24:21,362 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:24:21,386 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:24:21,395 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:24:21,631 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:24:25,666 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:24:28,727 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:25:08,776 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:26:21,838 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:26:58,821 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:26:58,988 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:26:59,153 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:26:59,197 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:26:59,857 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:26:59,891 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:26:59,937 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:26:59,941 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:26:59,944 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:26:59,983 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:26:59,990 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:27:00,026 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,032 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:27:00,035 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:27:00,039 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:27:00,052 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,059 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:27:00,071 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,076 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:27:00,080 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:27:00,083 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:27:00,117 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,123 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:27:00,150 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,157 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:27:00,160 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:27:00,164 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:27:00,196 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,201 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:27:00,233 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,237 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:27:00,241 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:27:00,244 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:27:00,300 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,307 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:27:00,361 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,366 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:27:00,371 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:27:00,374 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:27:00,410 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,416 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:27:00,450 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,456 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:27:00,460 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:27:00,463 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:27:00,495 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,499 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:27:00,529 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:27:00,534 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:27:00,538 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:27:00,542 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:27:00,720 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:27:00,849 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:27:00,978 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:27:01,406 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:27:01,430 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:27:01,454 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:27:01,476 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:27:01,484 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:27:01,488 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:27:01,493 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:27:01,506 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,512 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:27:01,525 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,531 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:27:01,535 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:27:01,540 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:27:01,556 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,561 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:27:01,577 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,584 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:27:01,589 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:27:01,593 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:27:01,615 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:27:01,623 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:27:01,645 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:27:01,650 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:27:01,654 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:27:01,658 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:27:01,669 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:27:01,673 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:27:01,688 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:27:01,692 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:27:01,696 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:27:01,700 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:27:01,713 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,718 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:27:01,731 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,736 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:27:01,739 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:27:01,743 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:27:01,752 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:27:01,757 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:27:01,766 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:27:01,771 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:27:01,776 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:27:01,779 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:27:01,794 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,799 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:27:01,812 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,817 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:27:01,821 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:27:01,825 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:27:01,845 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:27:01,850 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:27:01,871 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:27:01,889 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:27:01,893 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:27:01,896 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:27:01,906 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,912 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:27:01,922 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,927 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:27:01,930 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:27:01,933 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:27:01,944 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,948 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:27:01,957 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,962 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:27:01,965 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:27:01,969 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:27:01,979 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,983 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:27:01,993 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:27:01,997 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:27:02,001 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:27:02,006 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:27:02,182 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:27:02,533 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:27:02,851 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:27:02,856 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:27:02,861 INFO  AppFacade - Rejestracja typów
2014-10-24 15:27:02,865 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:27:02,869 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:27:02,873 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:27:02,879 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:27:02,943 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:27:02,974 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:27:02,985 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:27:02,989 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:27:02,995 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:27:03,011 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:27:03,035 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:27:03,039 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:27:03,274 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:27:08,312 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:27:08,342 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:30:52,032 ERROR CharacterCalculator - Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at DnDHelper.Domain.CharacterCalculator.GetItemsBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 239
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 57
2014-10-24 15:30:53,790 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:30:57,796 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:30:57,874 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:02,910 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:07,949 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:12,990 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:18,031 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:23,071 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:28,103 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:33,122 INFO  ChangeTracker - All changes saved
2014-10-24 15:31:38,162 INFO  ChangeTracker - All changes saved
2014-10-24 15:32:04,209 INFO  ChangeTracker - All changes saved
2014-10-24 15:32:04,229 DEBUG UpdateClient - 0 entity has changed
2014-10-24 15:32:11,255 INFO  ChangeTracker - All changes saved
2014-10-24 15:34:34,934 INFO  ChangeTracker - All changes saved
2014-10-24 15:34:40,756 ERROR UpdateClient - The request channel timed out while waiting for a reply after 00:00:59.8408592. Increase the timeout value passed to the call to Request or increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout.
System.TimeoutException: The request channel timed out while waiting for a reply after 00:00:59.8408592. Increase the timeout value passed to the call to Request or increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout. ---> System.TimeoutException: The HTTP request to 'http://localhost:50453/Service.svc' has exceeded the allotted timeout of 00:01:00. The time allotted to this operation may have been a portion of a longer timeout. ---> System.Net.WebException: The operation has timed out
   at System.Net.HttpWebRequest.GetResponse()
   at System.ServiceModel.Channels.HttpChannelFactory`1.HttpRequestChannel.HttpChannelRequest.WaitForReply(TimeSpan timeout)
   --- End of inner exception stack trace ---
   at System.ServiceModel.Channels.HttpChannelUtilities.ProcessGetResponseWebException(WebException webException, HttpWebRequest request, HttpAbortReason abortReason)
   at System.ServiceModel.Channels.HttpChannelFactory`1.HttpRequestChannel.HttpChannelRequest.WaitForReply(TimeSpan timeout)
   at System.ServiceModel.Channels.RequestChannel.Request(Message message, TimeSpan timeout)
   --- End of inner exception stack trace ---

Server stack trace: 
   at System.ServiceModel.Channels.RequestChannel.Request(Message message, TimeSpan timeout)
   at System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   at System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   at System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   at DnDHelper.UpdateServiceAPI.IUpdateService.Synchronize(SyncRequest request)
   at DnDHelper.GUI.WPF.UpdateServiceProxy.Synchronize(SyncRequest request) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\UpdateServiceProxy.cs:line 15
   at DnDHelper.Domain.UpdateClient.Synchronize() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\UpdateClient.cs:line 45
2014-10-24 15:34:41,730 INFO  ChangeTracker - All changes saved
2014-10-24 15:34:49,839 INFO  ChangeTracker - All changes saved
2014-10-24 15:34:55,474 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:00,513 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:05,542 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:10,558 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:15,596 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:20,611 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:24,491 DEBUG UpdateClient - 0 entity has changed
2014-10-24 15:35:32,564 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:32,581 DEBUG UpdateClient - UpdateService - OK
2014-10-24 15:35:32,608 ERROR UpdateClient - Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at DnDHelper.Domain.UpdateClient.Synchronize() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\UpdateClient.cs:line 53
2014-10-24 15:35:37,589 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:39,280 DEBUG UpdateClient - 0 entity has changed
2014-10-24 15:35:45,624 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:45,641 DEBUG UpdateClient - UpdateService - OK
2014-10-24 15:35:50,863 ERROR UpdateClient - Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at DnDHelper.Domain.UpdateClient.Synchronize() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\UpdateClient.cs:line 53
2014-10-24 15:35:50,880 INFO  ChangeTracker - All changes saved
2014-10-24 15:35:55,898 INFO  ChangeTracker - All changes saved
2014-10-24 15:36:16,680 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:36:16,857 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:36:16,995 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:36:17,030 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:36:17,683 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:36:17,717 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:36:17,763 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:36:17,766 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:36:17,770 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:36:17,807 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:17,814 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:36:17,848 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:17,853 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:36:17,857 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:36:17,860 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:36:17,874 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:17,881 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:36:17,893 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:17,898 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:36:17,901 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:36:17,905 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:36:17,938 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:17,944 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:36:17,974 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:17,980 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:36:17,983 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:36:17,988 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:36:18,019 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,023 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:36:18,055 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,059 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:36:18,063 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:36:18,066 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:36:18,121 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,128 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:36:18,184 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,189 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:36:18,193 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:36:18,196 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:36:18,231 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,237 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:36:18,272 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,277 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:36:18,281 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:36:18,285 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:36:18,315 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,320 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:36:18,348 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:36:18,353 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:36:18,356 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:36:18,360 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:36:18,541 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:36:18,673 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:36:18,791 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:36:18,909 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:36:18,931 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:36:18,954 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:36:18,976 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:36:18,983 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:36:18,987 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:36:18,992 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:36:19,005 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,012 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:36:19,025 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,030 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:36:19,034 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:36:19,038 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:36:19,053 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,058 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:36:19,072 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,078 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:36:19,081 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:36:19,085 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:36:19,110 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:36:19,119 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:36:19,140 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:36:19,145 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:36:19,149 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:36:19,153 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:36:19,164 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:36:19,169 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:36:19,181 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:36:19,185 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:36:19,188 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:36:19,192 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:36:19,205 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,210 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:36:19,223 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,227 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:36:19,231 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:36:19,234 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:36:19,243 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:36:19,249 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:36:19,259 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:36:19,263 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:36:19,267 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:36:19,270 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:36:19,285 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,290 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:36:19,303 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,307 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:36:19,311 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:36:19,315 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:36:19,335 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:36:19,339 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:36:19,361 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:36:19,388 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:36:19,392 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:36:19,395 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:36:19,408 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,414 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:36:19,425 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,429 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:36:19,433 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:36:19,436 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:36:19,446 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,451 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:36:19,460 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,464 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:36:19,467 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:36:19,471 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:36:19,481 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,485 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:36:19,496 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:36:19,501 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:36:19,505 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:36:19,510 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:36:19,677 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:36:20,036 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:36:20,353 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:36:20,357 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:36:20,362 INFO  AppFacade - Rejestracja typów
2014-10-24 15:36:20,368 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:36:20,372 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:36:20,377 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:36:20,395 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:36:20,433 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:36:20,462 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:36:20,471 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:36:20,475 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:36:20,480 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:36:20,495 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:36:20,519 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:36:20,523 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:36:20,745 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:36:25,057 DEBUG UpdateClient - 0 entity has changed
2014-10-24 15:36:25,489 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:36:32,957 DEBUG UpdateClient - UpdateService - OK
2014-10-24 15:36:37,346 DEBUG UpdateClient - To update: AppSetting Id: c9e6bf6b-2bba-46da-8af9-da8d7d7a4885 True
2014-10-24 15:39:31,509 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:39:31,680 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:39:31,855 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:39:31,890 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:39:32,590 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:39:32,628 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:39:32,676 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:39:32,679 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:39:32,683 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:39:32,726 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,737 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:39:32,772 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,777 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:39:32,780 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:39:32,786 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:39:32,799 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,807 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:39:32,822 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,826 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:39:32,829 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:39:32,833 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:39:32,863 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,869 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:39:32,900 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,905 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:39:32,909 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:39:32,912 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:39:32,945 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,949 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:39:32,982 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:32,986 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:39:32,990 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:39:32,994 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:39:33,060 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:33,066 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:39:33,129 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:33,133 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:39:33,137 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:39:33,140 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:39:33,175 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:33,182 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:39:33,216 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:33,220 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:39:33,224 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:39:33,228 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:39:33,261 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:33,267 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:39:33,301 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:39:33,306 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:39:33,309 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:39:33,313 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:39:33,502 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:39:34,176 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:39:34,315 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:39:34,443 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:39:34,463 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:39:34,485 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:39:34,507 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:39:34,514 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:39:34,517 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:39:34,521 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:39:34,533 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,537 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:39:34,550 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,556 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:39:34,559 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:39:34,563 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:39:34,578 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,583 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:39:34,596 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,602 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:39:34,606 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:39:34,609 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:39:34,632 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:39:34,640 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:39:34,663 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:39:34,667 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:39:34,671 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:39:34,674 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:39:34,686 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:39:34,691 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:39:34,702 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:39:34,706 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:39:34,711 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:39:34,714 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:39:34,727 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,731 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:39:34,747 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,751 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:39:34,755 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:39:34,758 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:39:34,768 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:39:34,773 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:39:34,783 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:39:34,789 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:39:34,792 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:39:34,796 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:39:34,809 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,814 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:39:34,829 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,833 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:39:34,837 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:39:34,841 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:39:34,865 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:39:34,870 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:39:34,894 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:39:34,917 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:39:34,922 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:39:34,925 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:39:34,936 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,942 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:39:34,953 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,957 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:39:34,961 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:39:34,965 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:39:34,975 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,979 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:39:34,989 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:34,994 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:39:34,998 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:39:35,002 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:39:35,011 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:35,016 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:39:35,026 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:39:35,031 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:39:35,035 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:39:35,039 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:39:35,228 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:39:35,617 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:39:35,960 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:39:35,964 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:39:35,971 INFO  AppFacade - Rejestracja typów
2014-10-24 15:39:35,976 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:39:35,980 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:39:35,984 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:39:35,990 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:39:36,020 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:39:36,030 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:39:36,034 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:39:36,041 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:39:36,046 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:39:36,060 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:39:36,088 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:39:36,092 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:39:36,334 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:39:41,060 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:39:42,129 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:39:43,064 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:39:43,092 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:39:43,114 DEBUG UpdateClient - Sending 10 elements of RaceDefinition...
2014-10-24 15:39:43,138 DEBUG UpdateClient - Sending 11 elements of ClassDefinition...
2014-10-24 15:39:43,175 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:39:43,196 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:39:43,223 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:39:43,243 DEBUG UpdateClient - Sending 14 elements of EffectDefinition...
2014-10-24 15:39:43,269 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,290 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,309 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,327 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,344 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,379 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,399 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,417 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,436 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,459 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,480 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,500 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,520 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,542 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,562 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:39:43,583 DEBUG UpdateClient - Sending 16 elements of SpellDefinition...
2014-10-24 15:39:43,603 DEBUG UpdateClient - Sending 20 elements of SkillDefinition...
2014-10-24 15:39:43,623 DEBUG UpdateClient - Sending 2 elements of SkillDefinition...
2014-10-24 15:39:43,647 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:39:43,669 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:39:43,690 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:39:43,711 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:39:43,731 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:39:43,753 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:39:43,774 DEBUG UpdateClient - Sending 15 elements of AtutDefinition...
2014-10-24 15:39:43,803 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,827 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,850 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,874 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,893 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,913 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,935 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,954 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,975 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:43,995 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:44,017 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:44,037 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:44,062 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:39:44,080 DEBUG UpdateClient - Sending 5 elements of ItemDefinition...
2014-10-24 15:39:44,130 DEBUG UpdateClient - Sending 20 elements of CharacterGroup...
2014-10-24 15:39:44,226 DEBUG UpdateClient - Sending 19 elements of CharacterGroup...
2014-10-24 15:39:44,283 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,314 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,347 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,385 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,417 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,446 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,475 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,503 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,535 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,564 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,592 DEBUG UpdateClient - Sending 20 elements of Character...
2014-10-24 15:39:44,622 DEBUG UpdateClient - Sending 15 elements of Character...
2014-10-24 15:41:28,213 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:41:28,243 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:41:28,311 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:41:28,345 DEBUG UpdateClient - Sending 10 elements of RaceDefinition...
2014-10-24 15:41:28,372 DEBUG UpdateClient - Sending 11 elements of ClassDefinition...
2014-10-24 15:41:28,411 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:41:28,448 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:41:28,490 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:41:28,528 DEBUG UpdateClient - Sending 14 elements of EffectDefinition...
2014-10-24 15:41:28,568 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,606 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,651 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,690 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,739 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,785 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,834 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,878 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,925 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:28,970 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:29,019 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:29,069 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:29,120 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:29,174 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:29,228 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:41:29,280 DEBUG UpdateClient - Sending 16 elements of SpellDefinition...
2014-10-24 15:41:29,327 DEBUG UpdateClient - Sending 20 elements of SkillDefinition...
2014-10-24 15:41:29,380 DEBUG UpdateClient - Sending 2 elements of SkillDefinition...
2014-10-24 15:41:29,427 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:41:29,481 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:41:29,534 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:41:29,595 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:41:29,648 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:41:29,699 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:41:29,760 DEBUG UpdateClient - Sending 15 elements of AtutDefinition...
2014-10-24 15:41:29,813 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:44:45,562 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:44:45,740 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:44:45,901 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:44:45,933 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:44:46,597 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:44:46,631 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:44:46,677 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:44:46,680 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:44:46,684 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:44:46,719 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,727 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:44:46,763 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,769 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:44:46,772 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:44:46,777 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:44:46,789 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,795 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:44:46,809 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,813 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:44:46,816 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:44:46,820 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:44:46,850 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,855 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:44:46,886 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,891 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:44:46,895 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:44:46,898 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:44:46,928 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,932 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:44:46,963 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:46,968 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:44:46,972 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:44:46,975 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:44:47,030 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:47,037 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:44:47,094 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:47,099 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:44:47,103 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:44:47,106 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:44:47,141 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:47,147 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:44:47,181 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:47,186 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:44:47,190 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:44:47,193 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:44:47,222 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:47,227 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:44:47,258 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:44:47,262 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:44:47,266 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:44:47,269 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:44:47,457 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:44:47,598 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:44:47,726 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:44:47,890 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:44:47,910 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:44:47,933 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:44:47,954 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:44:47,961 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:44:47,964 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:44:47,968 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:44:47,980 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:47,985 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:44:47,999 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,004 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:44:48,007 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:44:48,011 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:44:48,025 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,031 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:44:48,045 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,049 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:44:48,053 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:44:48,057 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:44:48,080 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:44:48,089 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:44:48,112 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:44:48,117 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:44:48,120 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:44:48,124 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:44:48,136 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:44:48,141 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:44:48,152 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:44:48,156 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:44:48,160 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:44:48,164 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:44:48,177 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,182 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:44:48,196 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,202 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:44:48,205 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:44:48,209 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:44:48,218 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:44:48,222 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:44:48,232 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:44:48,237 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:44:48,240 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:44:48,244 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:44:48,257 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,262 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:44:48,276 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,281 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:44:48,285 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:44:48,288 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:44:48,309 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:44:48,314 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:44:48,335 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:44:48,353 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:44:48,357 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:44:48,360 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:44:48,371 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,377 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:44:48,389 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,393 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:44:48,397 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:44:48,401 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:44:48,410 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,415 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:44:48,424 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,429 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:44:48,432 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:44:48,436 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:44:48,446 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,450 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:44:48,459 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:44:48,463 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:44:48,468 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:44:48,472 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:44:48,653 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:44:49,057 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:44:49,367 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:44:49,371 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:44:49,376 INFO  AppFacade - Rejestracja typów
2014-10-24 15:44:49,381 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:44:49,385 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:44:49,389 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:44:49,406 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:44:49,421 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:44:49,431 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:44:49,436 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:44:49,440 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:44:49,449 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:44:49,464 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:44:49,489 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:44:49,492 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:44:49,755 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:44:54,444 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:44:54,468 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:44:55,281 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:44:55,335 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:44:55,387 DEBUG UpdateClient - Sending 10 elements of RaceDefinition...
2014-10-24 15:44:55,439 DEBUG UpdateClient - Sending 11 elements of ClassDefinition...
2014-10-24 15:44:55,493 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:44:55,549 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:44:55,598 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:44:55,659 DEBUG UpdateClient - Sending 14 elements of EffectDefinition...
2014-10-24 15:44:55,716 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:55,766 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:55,815 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:55,873 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:55,925 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:55,979 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,036 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,090 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,143 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,193 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,251 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,304 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,357 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,418 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,471 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:44:56,522 DEBUG UpdateClient - Sending 16 elements of SpellDefinition...
2014-10-24 15:44:56,577 DEBUG UpdateClient - Sending 20 elements of SkillDefinition...
2014-10-24 15:44:56,636 DEBUG UpdateClient - Sending 2 elements of SkillDefinition...
2014-10-24 15:44:56,679 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:44:56,733 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:44:56,789 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:44:56,840 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:44:56,890 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:44:56,941 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:44:56,990 DEBUG UpdateClient - Sending 15 elements of AtutDefinition...
2014-10-24 15:44:57,040 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:47:57,350 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:47:57,397 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:47:57,456 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:47:57,516 DEBUG UpdateClient - Sending 10 elements of RaceDefinition...
2014-10-24 15:47:57,563 DEBUG UpdateClient - Sending 11 elements of ClassDefinition...
2014-10-24 15:47:57,609 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:47:57,663 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:47:57,710 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:47:57,759 DEBUG UpdateClient - Sending 14 elements of EffectDefinition...
2014-10-24 15:47:57,804 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:57,854 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:57,911 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:57,966 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,021 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,072 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,124 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,179 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,230 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,283 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,337 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,389 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,442 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,502 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,558 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:47:58,615 DEBUG UpdateClient - Sending 16 elements of SpellDefinition...
2014-10-24 15:47:58,671 DEBUG UpdateClient - Sending 20 elements of SkillDefinition...
2014-10-24 15:47:58,721 DEBUG UpdateClient - Sending 2 elements of SkillDefinition...
2014-10-24 15:47:58,763 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:47:58,811 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:47:58,865 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:47:58,922 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:47:58,971 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:47:59,018 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:47:59,074 DEBUG UpdateClient - Sending 15 elements of AtutDefinition...
2014-10-24 15:47:59,122 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:48:22,907 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:48:23,088 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:48:23,257 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:48:23,294 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:48:23,950 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:48:23,986 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:48:24,030 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:48:24,034 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:48:24,038 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:48:24,074 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,082 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:48:24,118 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,124 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:48:24,128 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:48:24,134 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:48:24,148 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,154 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:48:24,169 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,173 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:48:24,177 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:48:24,180 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:48:24,208 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,214 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:48:24,242 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,247 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:48:24,251 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:48:24,254 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:48:24,284 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,288 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:48:24,318 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,323 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:48:24,327 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:48:24,331 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:48:24,391 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,395 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:48:24,453 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,458 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:48:24,462 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:48:24,467 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:48:24,502 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,510 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:48:24,545 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,551 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:48:24,556 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:48:24,560 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:48:24,592 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,598 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:48:24,629 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:48:24,636 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:48:24,640 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:48:24,644 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:48:24,826 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:48:24,956 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:48:25,075 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:48:25,202 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:48:25,226 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:48:25,248 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:48:25,271 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:48:25,277 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:48:25,281 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:48:25,285 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:48:25,296 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,302 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:48:25,314 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,318 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:48:25,322 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:48:25,325 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:48:25,340 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,344 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:48:25,358 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,365 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:48:25,368 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:48:25,372 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:48:25,395 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:48:25,403 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:48:25,425 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:48:25,430 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:48:25,433 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:48:25,437 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:48:25,449 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:48:25,453 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:48:25,464 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:48:25,468 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:48:25,473 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:48:25,476 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:48:25,490 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,494 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:48:25,508 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,512 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:48:25,516 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:48:25,519 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:48:25,529 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:48:25,533 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:48:25,543 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:48:25,548 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:48:25,551 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:48:25,555 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:48:25,569 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,574 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:48:25,587 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,591 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:48:25,595 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:48:25,598 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:48:25,621 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:48:25,625 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:48:25,646 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:48:25,663 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:48:25,666 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:48:25,670 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:48:25,681 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,687 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:48:25,697 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,701 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:48:25,705 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:48:25,708 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:48:25,720 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,725 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:48:25,734 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,738 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:48:25,742 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:48:25,746 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:48:25,755 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,759 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:48:25,769 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:48:25,773 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:48:25,776 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:48:25,780 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:48:25,967 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:48:26,285 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:48:26,594 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:48:26,598 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:48:26,603 INFO  AppFacade - Rejestracja typów
2014-10-24 15:48:26,608 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:48:26,612 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:48:26,616 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:48:26,622 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:48:26,646 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:48:26,655 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:48:26,662 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:48:26,669 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:48:26,675 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:48:26,690 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:48:26,716 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:48:26,719 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:48:26,950 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:48:31,691 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:48:32,046 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:48:32,890 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:48:32,945 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:48:32,994 DEBUG UpdateClient - Sending 10 elements of RaceDefinition...
2014-10-24 15:48:33,050 DEBUG UpdateClient - Sending 11 elements of ClassDefinition...
2014-10-24 15:48:33,105 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:48:33,156 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:48:33,206 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:48:33,257 DEBUG UpdateClient - Sending 14 elements of EffectDefinition...
2014-10-24 15:48:33,317 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,368 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,413 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,461 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,511 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,560 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,617 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,663 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,713 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,769 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,819 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,870 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,913 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:33,963 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:34,015 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:48:34,065 DEBUG UpdateClient - Sending 16 elements of SpellDefinition...
2014-10-24 15:48:34,112 DEBUG UpdateClient - Sending 20 elements of SkillDefinition...
2014-10-24 15:48:34,157 DEBUG UpdateClient - Sending 2 elements of SkillDefinition...
2014-10-24 15:48:34,203 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:48:34,248 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:48:34,295 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:48:34,346 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:48:34,401 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:48:34,451 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:48:34,496 DEBUG UpdateClient - Sending 15 elements of AtutDefinition...
2014-10-24 15:48:34,548 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:48:34,599 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:49:45,989 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:49:46,165 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:49:46,380 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:49:46,415 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:49:47,074 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:49:47,107 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:49:47,160 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:49:47,163 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:49:47,168 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:49:47,207 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,214 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:49:47,248 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,255 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:49:47,258 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:49:47,263 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:49:47,277 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,285 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:49:47,300 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,306 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:49:47,310 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:49:47,314 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:49:47,347 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,353 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:49:47,384 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,389 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:49:47,393 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:49:47,396 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:49:47,428 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,432 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:49:47,461 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,466 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:49:47,469 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:49:47,476 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:49:47,531 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,536 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:49:47,592 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,597 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:49:47,600 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:49:47,604 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:49:47,640 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,646 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:49:47,679 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,684 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:49:47,687 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:49:47,692 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:49:47,720 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,725 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:49:47,757 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:49:47,761 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:49:47,765 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:49:47,768 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:49:47,958 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:49:48,120 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:49:48,239 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:49:48,376 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:49:48,396 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:49:48,418 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:49:48,441 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:49:48,447 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:49:48,450 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:49:48,454 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:49:48,468 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,472 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:49:48,484 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,489 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:49:48,493 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:49:48,496 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:49:48,512 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,516 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:49:48,532 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,538 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:49:48,543 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:49:48,546 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:49:48,570 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:49:48,579 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:49:48,601 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:49:48,607 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:49:48,610 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:49:48,614 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:49:48,626 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:49:48,631 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:49:48,644 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:49:48,649 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:49:48,653 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:49:48,657 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:49:48,671 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,678 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:49:48,692 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,696 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:49:48,699 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:49:48,703 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:49:48,712 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:49:48,716 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:49:48,727 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:49:48,731 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:49:48,736 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:49:48,739 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:49:48,753 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,758 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:49:48,770 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,775 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:49:48,778 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:49:48,782 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:49:48,803 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:49:48,808 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:49:48,829 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:49:48,851 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:49:48,855 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:49:48,858 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:49:48,868 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,874 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:49:48,886 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,891 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:49:48,894 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:49:48,898 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:49:48,907 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,912 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:49:48,922 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,926 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:49:48,929 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:49:48,933 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:49:48,943 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,948 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:49:48,957 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:49:48,962 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:49:48,966 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:49:48,969 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:49:49,344 ERROR Application - There is an error in XML document (6052, 7).
System.InvalidOperationException: There is an error in XML document (6052, 7). ---> System.Xml.XmlException: The 'Elements' start tag on line 5 position 4 does not match the end tag of 'ItemDefinition'. Line 6052, position 7.
   at System.Xml.XmlTextReaderImpl.Throw(String res, String[] args)
   at System.Xml.XmlTextReaderImpl.ThrowTagMismatch(NodeData startTag)
   at System.Xml.XmlTextReaderImpl.ParseEndElement()
   at System.Xml.XmlTextReaderImpl.ParseElementContent()
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read81_RepositoryOfItemDefinition(Boolean isNullable, Boolean checkType)
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read82_RepositoryOfItemDefinition()
   --- End of inner exception stack trace ---
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
   at DnDHelper.Infrastructure.XmlRepositorySerializer.Deserialize[T](String content) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\XmlRepositorySerializer.cs:line 31
   at DnDHelper.Infrastructure.FileRepositoryStorage.LoadRepository[T]() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\FileRepositoryStorage.cs:line 55
   at DnDHelper.Domain.RepositorySet.Register[T](IDefaultEntityProvider`1 defaultEntityProvider) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 30
   at DnDHelper.Domain.RepositorySet.CreateDefault() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 62
   at DnDHelper.GUI.WPF.App.InitAppEngine() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\App.xaml.cs:line 73
   at DnDHelper.GUI.WPF.MainWindow..ctor() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\MainWindow.xaml.cs:line 41
2014-10-24 15:50:06,652 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:50:06,820 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:50:06,958 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:50:06,990 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:50:07,630 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:50:07,662 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:50:07,707 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:50:07,711 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:50:07,715 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:50:07,753 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,761 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:50:07,798 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,804 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:50:07,807 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:50:07,812 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:50:07,826 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,832 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:50:07,845 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,851 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:50:07,855 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:50:07,859 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:50:07,887 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,892 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:50:07,922 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,927 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:50:07,931 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:50:07,936 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:50:07,970 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:07,975 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:50:08,004 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,009 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:50:08,012 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:50:08,017 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:50:08,074 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,079 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:50:08,138 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,143 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:50:08,147 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:50:08,151 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:50:08,183 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,189 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:50:08,227 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,233 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:50:08,237 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:50:08,241 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:50:08,271 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,277 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:50:08,304 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:08,310 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:50:08,314 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:50:08,317 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:50:08,502 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:50:08,644 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:50:08,770 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:50:08,905 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:50:08,925 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:08,946 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:50:08,968 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:08,975 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:50:08,978 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:50:08,982 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:50:08,995 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:08,999 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:50:09,012 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,017 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:50:09,022 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:50:09,026 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:50:09,042 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,046 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:50:09,062 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,067 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:50:09,071 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:50:09,075 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:50:09,100 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:50:09,108 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:50:09,132 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:50:09,138 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:50:09,142 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:50:09,146 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:50:09,159 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:09,164 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:50:09,176 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:09,182 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:50:09,186 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:50:09,189 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:50:09,203 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,207 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:50:09,221 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,225 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:50:09,229 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:50:09,232 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:50:09,241 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:09,246 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:50:09,256 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:09,261 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:50:09,264 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:50:09,268 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:50:09,281 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,287 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:50:09,300 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,304 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:50:09,308 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:50:09,311 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:50:09,333 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:09,337 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:50:09,359 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:09,382 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:50:09,386 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:50:09,390 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:50:09,404 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,410 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:50:09,420 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,425 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:50:09,428 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:50:09,432 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:50:09,442 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,447 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:50:09,456 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,460 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:50:09,465 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:50:09,469 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:50:09,478 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,483 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:50:09,493 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:09,497 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:50:09,501 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:50:09,504 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:50:09,868 ERROR Application - There is an error in XML document (6052, 7).
System.InvalidOperationException: There is an error in XML document (6052, 7). ---> System.Xml.XmlException: The 'Elements' start tag on line 5 position 4 does not match the end tag of 'ItemDefinition'. Line 6052, position 7.
   at System.Xml.XmlTextReaderImpl.Throw(String res, String[] args)
   at System.Xml.XmlTextReaderImpl.ThrowTagMismatch(NodeData startTag)
   at System.Xml.XmlTextReaderImpl.ParseEndElement()
   at System.Xml.XmlTextReaderImpl.ParseElementContent()
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read81_RepositoryOfItemDefinition(Boolean isNullable, Boolean checkType)
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read82_RepositoryOfItemDefinition()
   --- End of inner exception stack trace ---
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
   at DnDHelper.Infrastructure.XmlRepositorySerializer.Deserialize[T](String content) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\XmlRepositorySerializer.cs:line 31
   at DnDHelper.Infrastructure.FileRepositoryStorage.LoadRepository[T]() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\FileRepositoryStorage.cs:line 55
   at DnDHelper.Domain.RepositorySet.Register[T](IDefaultEntityProvider`1 defaultEntityProvider) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 30
   at DnDHelper.Domain.RepositorySet.CreateDefault() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 62
   at DnDHelper.GUI.WPF.App.InitAppEngine() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\App.xaml.cs:line 73
   at DnDHelper.GUI.WPF.MainWindow..ctor() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\MainWindow.xaml.cs:line 41
2014-10-24 15:50:46,715 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:50:46,897 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:50:47,033 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:50:47,065 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:50:47,715 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:50:47,748 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:50:47,794 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:50:47,798 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:50:47,801 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:50:47,836 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:47,843 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:50:47,879 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:47,884 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:50:47,888 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:50:47,892 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:50:47,905 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:47,912 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:50:47,925 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:47,930 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:50:47,933 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:50:47,936 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:50:47,966 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:47,971 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:50:47,999 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,003 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:50:48,007 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:50:48,010 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:50:48,040 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,046 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:50:48,077 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,081 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:50:48,085 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:50:48,089 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:50:48,145 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,150 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:50:48,209 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,214 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:50:48,217 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:50:48,221 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:50:48,256 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,262 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:50:48,295 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,299 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:50:48,303 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:50:48,307 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:50:48,335 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,344 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:50:48,372 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:50:48,378 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:50:48,381 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:50:48,384 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:50:48,564 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:50:48,710 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:50:48,839 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:50:48,966 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:50:48,987 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:49,011 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:50:49,034 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:49,044 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:50:49,049 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:50:49,053 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:50:49,067 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,072 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:50:49,087 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,091 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:50:49,095 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:50:49,099 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:50:49,113 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,118 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:50:49,132 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,137 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:50:49,140 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:50:49,144 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:50:49,166 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:50:49,174 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:50:49,198 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:50:49,205 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:50:49,209 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:50:49,213 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:50:49,228 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:49,234 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:50:49,246 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:49,251 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:50:49,255 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:50:49,259 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:50:49,273 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,278 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:50:49,292 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,297 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:50:49,300 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:50:49,304 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:50:49,313 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:49,317 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:50:49,327 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:50:49,331 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:50:49,334 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:50:49,338 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:50:49,351 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,356 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:50:49,370 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,374 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:50:49,378 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:50:49,382 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:50:49,404 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:49,409 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:50:49,432 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:50:49,444 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:50:49,448 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:50:49,451 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:50:49,461 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,466 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:50:49,478 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,482 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:50:49,485 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:50:49,489 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:50:49,498 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,502 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:50:49,512 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,517 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:50:49,520 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:50:49,524 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:50:49,533 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,538 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:50:49,547 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:50:49,552 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:50:49,555 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:50:49,558 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:50:49,926 ERROR Application - There is an error in XML document (6052, 7).
System.InvalidOperationException: There is an error in XML document (6052, 7). ---> System.Xml.XmlException: The 'Elements' start tag on line 5 position 4 does not match the end tag of 'ItemDefinition'. Line 6052, position 7.
   at System.Xml.XmlTextReaderImpl.Throw(String res, String[] args)
   at System.Xml.XmlTextReaderImpl.ThrowTagMismatch(NodeData startTag)
   at System.Xml.XmlTextReaderImpl.ParseEndElement()
   at System.Xml.XmlTextReaderImpl.ParseElementContent()
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read81_RepositoryOfItemDefinition(Boolean isNullable, Boolean checkType)
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read82_RepositoryOfItemDefinition()
   --- End of inner exception stack trace ---
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
   at DnDHelper.Infrastructure.XmlRepositorySerializer.Deserialize[T](String content) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\XmlRepositorySerializer.cs:line 31
   at DnDHelper.Infrastructure.FileRepositoryStorage.LoadRepository[T]() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\FileRepositoryStorage.cs:line 55
   at DnDHelper.Domain.RepositorySet.Register[T](IDefaultEntityProvider`1 defaultEntityProvider) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 30
   at DnDHelper.Domain.RepositorySet.CreateDefault() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 62
   at DnDHelper.GUI.WPF.App.InitAppEngine() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\App.xaml.cs:line 73
   at DnDHelper.GUI.WPF.MainWindow..ctor() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\MainWindow.xaml.cs:line 41
2014-10-24 15:51:12,527 INFO  AppFacade - Rejestracja typów
2014-10-24 15:51:12,533 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:51:12,537 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:51:12,543 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:51:12,565 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:51:12,597 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:51:12,687 FATAL AppFacade - B³¹d podczas rejestracji typu! Nie zarejestrowano repozytorium: DnDHelper.Domain.AppSetting
System.Management.Instrumentation.InstanceNotFoundException: Nie zarejestrowano repozytorium: DnDHelper.Domain.AppSetting
   at DnDHelper.Domain.RepositorySet.Get[T]() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 19
   at DnDHelper.Domain.AppFacade.RegisterTypes() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\AppFacade.cs:line 376
2014-10-24 15:51:40,358 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:51:40,519 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:51:40,780 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:51:40,825 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:51:41,479 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:51:41,513 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:51:41,556 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:51:41,560 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:51:41,564 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:51:41,599 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,608 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:51:41,641 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,647 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:51:41,651 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:51:41,655 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:51:41,667 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,674 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:51:41,687 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,692 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:51:41,695 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:51:41,699 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:51:41,728 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,733 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:51:41,762 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,766 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:51:41,770 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:51:41,773 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:51:41,804 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,810 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:51:41,844 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,848 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:51:41,852 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:51:41,856 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:51:41,912 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,917 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:51:41,973 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:41,979 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:51:41,982 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:51:41,986 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:51:42,019 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:42,025 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:51:42,058 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:42,063 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:51:42,066 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:51:42,071 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:51:42,102 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:42,107 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:51:42,135 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:51:42,140 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:51:42,143 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:51:42,147 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:51:42,325 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:51:42,483 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:51:42,601 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:51:42,733 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:51:42,754 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:51:42,776 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:51:42,801 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:51:42,807 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:51:42,811 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:51:42,814 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:51:42,826 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:42,831 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:51:42,845 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:42,849 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:51:42,852 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:51:42,856 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:51:42,871 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:42,876 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:51:42,890 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:42,895 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:51:42,898 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:51:42,902 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:51:42,924 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:51:42,932 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:51:42,954 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:51:42,959 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:51:42,963 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:51:42,966 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:51:42,979 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:51:42,983 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:51:42,994 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:51:42,999 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:51:43,003 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:51:43,009 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:51:43,022 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,027 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:51:43,039 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,044 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:51:43,047 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:51:43,051 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:51:43,062 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:51:43,067 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:51:43,078 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:51:43,083 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:51:43,088 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:51:43,092 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:51:43,106 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,111 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:51:43,126 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,132 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:51:43,136 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:51:43,141 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:51:43,168 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:51:43,172 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:51:43,193 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:51:43,211 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:51:43,215 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:51:43,221 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:51:43,233 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,238 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:51:43,249 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,254 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:51:43,258 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:51:43,261 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:51:43,270 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,276 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:51:43,287 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,291 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:51:43,295 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:51:43,298 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:51:43,308 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,312 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:51:43,323 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:51:43,327 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:51:43,330 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:51:43,334 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:51:43,706 ERROR Application - There is an error in XML document (6052, 7).
System.InvalidOperationException: There is an error in XML document (6052, 7). ---> System.Xml.XmlException: The 'Elements' start tag on line 5 position 4 does not match the end tag of 'ItemDefinition'. Line 6052, position 7.
   at System.Xml.XmlTextReaderImpl.Throw(String res, String[] args)
   at System.Xml.XmlTextReaderImpl.ThrowTagMismatch(NodeData startTag)
   at System.Xml.XmlTextReaderImpl.ParseEndElement()
   at System.Xml.XmlTextReaderImpl.ParseElementContent()
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read81_RepositoryOfItemDefinition(Boolean isNullable, Boolean checkType)
   at Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderRepository1.Read82_RepositoryOfItemDefinition()
   --- End of inner exception stack trace ---
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
   at DnDHelper.Infrastructure.XmlRepositorySerializer.Deserialize[T](String content) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\XmlRepositorySerializer.cs:line 31
   at DnDHelper.Infrastructure.FileRepositoryStorage.LoadRepository[T]() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Infrastructure\FileRepositoryStorage.cs:line 55
   at DnDHelper.Domain.RepositorySet.Register[T](IDefaultEntityProvider`1 defaultEntityProvider) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 30
   at DnDHelper.Domain.RepositorySet.CreateDefault() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\RepositorySet.cs:line 62
   at DnDHelper.GUI.WPF.App.InitAppEngine() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\App.xaml.cs:line 73
   at DnDHelper.GUI.WPF.MainWindow..ctor() in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\MainWindow.xaml.cs:line 41
2014-10-24 15:52:56,730 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:52:59,855 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:53:00,640 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:53:00,681 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:53:01,313 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:53:01,348 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:53:01,394 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:53:01,397 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:53:01,402 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:53:01,436 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,441 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:53:01,474 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,479 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:53:01,482 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:53:01,486 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:53:01,500 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,506 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:53:01,519 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,523 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:53:01,527 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:53:01,531 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:53:01,558 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,564 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:53:01,592 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,596 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:53:01,601 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:53:01,605 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:53:01,635 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,640 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:53:01,669 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,673 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:53:01,676 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:53:01,680 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:53:01,736 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,741 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:53:01,798 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,803 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:53:01,807 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:53:01,810 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:53:01,844 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,850 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:53:01,883 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,888 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:53:01,892 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:53:01,895 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:53:01,925 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,929 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:53:01,958 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:53:01,963 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:53:01,967 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:53:01,971 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:53:02,889 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:53:03,540 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:53:04,231 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:53:04,972 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:53:04,996 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:53:05,018 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:53:05,038 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:53:05,044 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:53:05,047 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:53:05,051 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:53:05,063 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,068 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:53:05,080 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,084 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:53:05,088 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:53:05,091 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:53:05,105 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,109 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:53:05,123 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,128 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:53:05,131 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:53:05,135 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:53:05,157 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:53:05,164 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:53:05,186 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:53:05,192 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:53:05,195 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:53:05,198 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:53:05,209 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:53:05,213 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:53:05,225 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:53:05,229 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:53:05,232 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:53:05,236 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:53:05,249 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,253 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:53:05,266 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,270 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:53:05,274 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:53:05,277 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:53:05,286 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:53:05,290 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:53:05,301 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:53:05,305 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:53:05,308 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:53:05,312 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:53:05,325 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,329 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:53:05,343 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,347 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:53:05,350 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:53:05,353 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:53:05,375 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:53:05,379 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:53:05,401 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:53:05,412 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:53:05,415 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:53:05,418 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:53:05,431 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,436 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:53:05,446 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,450 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:53:05,453 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:53:05,457 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:53:05,466 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,470 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:53:05,480 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,484 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:53:05,488 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:53:05,491 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:53:05,501 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,505 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:53:05,514 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:53:05,518 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:53:05,522 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:53:05,525 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:54:32,957 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-24 15:54:33,132 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-24 15:54:33,270 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:54:33,303 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:54:33,964 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-24 15:54:34,002 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-24 15:54:34,049 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:54:34,052 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-24 15:54:34,056 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:54:34,091 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,100 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-24 15:54:34,133 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,138 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:54:34,142 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-24 15:54:34,147 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:54:34,159 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,166 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-24 15:54:34,180 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,185 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:54:34,188 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-24 15:54:34,192 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:54:34,221 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,226 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-24 15:54:34,255 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,259 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:54:34,263 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-24 15:54:34,266 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:54:34,300 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,305 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-24 15:54:34,338 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,343 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:54:34,347 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-24 15:54:34,351 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:54:34,411 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,416 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-24 15:54:34,472 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,477 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:54:34,480 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-24 15:54:34,484 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:54:34,517 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,523 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-24 15:54:34,556 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,561 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:54:34,565 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-24 15:54:34,568 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:54:34,597 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,602 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-24 15:54:34,630 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-24 15:54:34,635 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:54:34,639 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-24 15:54:34,642 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-24 15:54:34,846 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-24 15:54:35,004 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-24 15:54:35,124 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-24 15:54:35,263 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:54:35,283 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:54:35,304 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-24 15:54:35,327 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:54:35,334 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:54:35,337 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-24 15:54:35,341 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:54:35,353 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,358 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-24 15:54:35,370 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,375 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:54:35,378 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-24 15:54:35,382 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:54:35,397 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,401 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-24 15:54:35,416 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,421 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:54:35,424 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-24 15:54:35,428 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:54:35,452 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:54:35,460 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-24 15:54:35,483 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-24 15:54:35,488 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:54:35,491 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-24 15:54:35,496 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:54:35,507 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:54:35,511 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-24 15:54:35,523 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-24 15:54:35,528 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:54:35,532 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-24 15:54:35,536 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:54:35,549 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,553 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-24 15:54:35,567 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,571 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:54:35,574 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-24 15:54:35,578 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:54:35,587 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:54:35,591 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-24 15:54:35,602 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-24 15:54:35,606 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:54:35,609 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-24 15:54:35,613 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:54:35,626 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,633 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-24 15:54:35,645 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,650 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:54:35,653 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-24 15:54:35,657 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:54:35,677 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:54:35,682 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-24 15:54:35,703 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-24 15:54:35,723 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:54:35,726 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-24 15:54:35,730 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:54:35,741 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,747 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-24 15:54:35,757 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,761 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:54:35,765 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-24 15:54:35,769 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:54:35,781 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,785 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-24 15:54:35,794 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,798 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:54:35,802 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-24 15:54:35,807 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:54:35,818 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,822 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-24 15:54:35,832 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-24 15:54:35,836 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:54:35,840 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-24 15:54:35,843 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-24 15:54:36,021 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-24 15:54:36,423 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-24 15:54:36,723 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Character
2014-10-24 15:54:36,727 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-24 15:54:36,733 INFO  AppFacade - Rejestracja typów
2014-10-24 15:54:39,300 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-24 15:54:39,307 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-24 15:54:39,312 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-24 15:54:39,363 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-24 15:54:39,369 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-24 15:54:39,400 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-24 15:54:39,405 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-24 15:54:39,409 INFO  AppFacade - Typy zarejestrowano
2014-10-24 15:54:39,414 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-24 15:54:39,430 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-24 15:54:39,456 DEBUG AdvancedQueueManager - Zakolejkowano do zapisania: Character
2014-10-24 15:54:39,461 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-24 15:54:39,728 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-24 15:54:42,705 DEBUG UpdateClient - Sending 2 elements of AppSetting...
2014-10-24 15:54:43,566 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:54:43,628 DEBUG UpdateClient - Sending 20 elements of RaceDefinition...
2014-10-24 15:54:43,687 DEBUG UpdateClient - Sending 10 elements of RaceDefinition...
2014-10-24 15:54:43,743 DEBUG UpdateClient - Sending 11 elements of ClassDefinition...
2014-10-24 15:54:43,796 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:54:43,853 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:54:43,910 DEBUG UpdateClient - Sending 20 elements of EffectDefinition...
2014-10-24 15:54:43,969 DEBUG UpdateClient - Sending 14 elements of EffectDefinition...
2014-10-24 15:54:44,020 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,071 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,120 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,172 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,223 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,278 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,329 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,381 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,424 INFO  AdvancedQueueManager - Zapisano repozytorium: Character
2014-10-24 15:54:44,439 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,499 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,559 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,618 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,669 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,717 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,771 DEBUG UpdateClient - Sending 20 elements of SpellDefinition...
2014-10-24 15:54:44,826 DEBUG UpdateClient - Sending 16 elements of SpellDefinition...
2014-10-24 15:54:44,889 DEBUG UpdateClient - Sending 20 elements of SkillDefinition...
2014-10-24 15:54:44,947 DEBUG UpdateClient - Sending 2 elements of SkillDefinition...
2014-10-24 15:54:44,989 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:54:45,049 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:54:45,102 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:54:45,156 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:54:45,211 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:54:45,270 DEBUG UpdateClient - Sending 20 elements of AtutDefinition...
2014-10-24 15:54:45,332 DEBUG UpdateClient - Sending 15 elements of AtutDefinition...
2014-10-24 15:54:45,392 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
2014-10-24 15:54:45,451 DEBUG UpdateClient - Sending 20 elements of ItemDefinition...
