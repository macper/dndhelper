2014-10-23 08:53:24,814 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 08:53:25,011 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 08:53:25,188 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 08:53:25,224 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 08:53:25,866 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 08:53:25,907 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 08:53:25,951 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 08:53:25,954 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 08:53:25,957 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 08:53:25,989 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:25,996 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 08:53:26,031 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,036 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 08:53:26,039 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 08:53:26,043 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 08:53:26,055 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,060 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 08:53:26,072 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,078 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 08:53:26,081 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 08:53:26,085 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 08:53:26,113 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,118 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 08:53:26,150 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,154 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 08:53:26,158 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 08:53:26,162 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 08:53:26,191 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,198 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 08:53:26,227 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,232 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 08:53:26,235 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 08:53:26,238 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 08:53:26,294 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,299 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 08:53:26,352 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,357 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 08:53:26,360 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 08:53:26,363 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 08:53:26,395 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,405 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 08:53:26,436 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,441 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 08:53:26,444 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 08:53:26,447 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 08:53:26,475 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,481 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 08:53:26,509 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:53:26,513 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 08:53:26,516 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 08:53:26,520 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 08:53:26,721 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 08:53:26,886 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 08:53:27,033 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 08:53:27,211 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 08:53:27,232 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:53:27,252 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 08:53:27,271 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:53:27,277 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 08:53:27,281 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 08:53:27,284 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 08:53:27,297 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,301 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 08:53:27,313 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,317 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 08:53:27,321 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 08:53:27,325 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 08:53:27,338 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,343 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 08:53:27,357 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,361 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 08:53:27,365 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 08:53:27,368 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 08:53:27,393 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 08:53:27,400 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 08:53:27,423 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 08:53:27,428 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 08:53:27,431 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 08:53:27,434 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 08:53:27,445 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 08:53:27,449 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 08:53:27,461 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 08:53:27,466 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 08:53:27,469 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 08:53:27,473 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 08:53:27,485 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,491 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 08:53:27,504 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,508 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 08:53:27,511 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 08:53:27,514 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 08:53:27,524 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 08:53:27,529 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 08:53:27,538 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 08:53:27,542 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 08:53:27,545 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 08:53:27,549 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 08:53:27,561 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,565 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 08:53:27,578 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,584 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 08:53:27,588 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 08:53:27,591 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 08:53:27,611 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:53:27,616 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 08:53:27,635 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:53:27,647 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 08:53:27,651 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 08:53:27,654 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 08:53:27,664 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,669 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 08:53:27,679 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,683 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 08:53:27,686 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 08:53:27,690 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 08:53:27,701 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,705 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 08:53:27,714 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,718 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 08:53:27,721 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 08:53:27,725 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 08:53:27,735 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,739 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 08:53:27,748 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:53:27,752 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 08:53:27,757 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 08:53:27,760 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 08:53:27,941 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 08:53:28,310 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 08:53:28,313 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 08:53:28,319 INFO  AppFacade - Rejestracja typów
2014-10-23 08:53:28,323 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 08:53:28,326 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 08:53:28,332 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 08:53:28,338 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 08:53:28,343 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 08:53:28,350 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 08:53:28,354 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 08:53:28,359 INFO  AppFacade - Black List:
2014-10-23 08:53:28,362 INFO  AppFacade - Typy zarejestrowano
2014-10-23 08:53:28,367 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 08:53:28,382 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 08:53:28,425 ERROR BriefServiceQueueManager - Could not load file or assembly 'ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.
System.IO.FileNotFoundException: Could not load file or assembly 'ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.
File name: 'ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
   at DnDHelper.Infrastructure.BriefService.UpdateBriefs(BriefUpdate update)
   at DnDHelper.Domain.BriefServiceQueueManager.<>c__DisplayClass3.<.ctor>b__1(Object o, DoWorkEventArgs e) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\BriefServiceQueueManager.cs:line 43

=== Pre-bind state information ===
LOG: DisplayName = ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 (Fully-specified)
LOG: Appbase = file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/
LOG: Initial PrivatePath = NULL
Calling assembly : ServiceStack.Common, Version=3.9.71.0, Culture=neutral, PublicKeyToken=null.
===
LOG: This bind starts in default load context.
LOG: Using application configuration file: D:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\bin\Debug\DnDHelper.GUI.WPF.vshost.exe.Config
LOG: Using host configuration file: 
LOG: Using machine configuration file from C:\Windows\Microsoft.NET\Framework64\v4.0.30319\config\machine.config.
LOG: Policy not being applied to reference at this time (private, custom, partial, or location-based assembly bind).
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces.DLL.
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces/ServiceStack.Interfaces.DLL.
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces.EXE.
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces/ServiceStack.Interfaces.EXE.

2014-10-23 08:53:28,679 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 08:56:07,439 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 08:56:07,633 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 08:56:07,782 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 08:56:07,815 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 08:56:08,398 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 08:56:08,436 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 08:56:08,479 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 08:56:08,482 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 08:56:08,485 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 08:56:08,519 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,527 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 08:56:08,561 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,566 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 08:56:08,569 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 08:56:08,573 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 08:56:08,586 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,592 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 08:56:08,603 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,607 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 08:56:08,610 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 08:56:08,614 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 08:56:08,641 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,646 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 08:56:08,673 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,678 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 08:56:08,681 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 08:56:08,684 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 08:56:08,711 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,716 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 08:56:08,744 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,749 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 08:56:08,752 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 08:56:08,756 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 08:56:08,808 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,812 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 08:56:08,865 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,871 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 08:56:08,874 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 08:56:08,877 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 08:56:08,909 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,915 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 08:56:08,946 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,950 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 08:56:08,953 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 08:56:08,956 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 08:56:08,984 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:08,989 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 08:56:09,016 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:56:09,020 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 08:56:09,023 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 08:56:09,027 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 08:56:09,205 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 08:56:09,360 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 08:56:09,496 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 08:56:09,632 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 08:56:09,651 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:56:09,671 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 08:56:09,690 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:56:09,700 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 08:56:09,703 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 08:56:09,707 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 08:56:09,718 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,722 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 08:56:09,733 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,737 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 08:56:09,741 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 08:56:09,744 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 08:56:09,758 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,762 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 08:56:09,775 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,781 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 08:56:09,784 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 08:56:09,787 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 08:56:09,808 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 08:56:09,816 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 08:56:09,837 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 08:56:09,842 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 08:56:09,845 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 08:56:09,850 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 08:56:09,861 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 08:56:09,866 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 08:56:09,876 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 08:56:09,882 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 08:56:09,885 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 08:56:09,889 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 08:56:09,900 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,904 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 08:56:09,917 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,921 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 08:56:09,924 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 08:56:09,928 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 08:56:09,936 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 08:56:09,940 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 08:56:09,950 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 08:56:09,954 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 08:56:09,957 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 08:56:09,960 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 08:56:09,972 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,979 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 08:56:09,991 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:09,995 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 08:56:09,998 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 08:56:10,001 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 08:56:10,021 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:56:10,026 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 08:56:10,046 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:56:10,054 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 08:56:10,057 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 08:56:10,061 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 08:56:10,070 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:10,075 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 08:56:10,086 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:10,090 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 08:56:10,093 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 08:56:10,096 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 08:56:10,106 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:10,110 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 08:56:10,120 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:10,124 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 08:56:10,127 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 08:56:10,131 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 08:56:10,139 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:10,144 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 08:56:10,153 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:56:10,157 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 08:56:10,161 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 08:56:10,164 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 08:56:10,353 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 08:56:10,694 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 08:56:10,697 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 08:56:10,703 INFO  AppFacade - Rejestracja typów
2014-10-23 08:56:10,707 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 08:56:10,711 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 08:56:10,715 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 08:56:10,721 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 08:56:10,725 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 08:56:10,741 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 08:56:10,746 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 08:56:10,750 INFO  AppFacade - Black List:
2014-10-23 08:56:10,753 INFO  AppFacade - Typy zarejestrowano
2014-10-23 08:56:10,758 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 08:56:10,789 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 08:56:10,807 ERROR BriefServiceQueueManager - Could not load file or assembly 'ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.
System.IO.FileNotFoundException: Could not load file or assembly 'ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.
File name: 'ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
   at DnDHelper.Infrastructure.BriefService.UpdateBriefs(BriefUpdate update)
   at DnDHelper.Domain.BriefServiceQueueManager.<>c__DisplayClass3.<.ctor>b__1(Object o, DoWorkEventArgs e) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\BriefServiceQueueManager.cs:line 43

=== Pre-bind state information ===
LOG: DisplayName = ServiceStack.Interfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 (Fully-specified)
LOG: Appbase = file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/
LOG: Initial PrivatePath = NULL
Calling assembly : ServiceStack.Common, Version=3.9.71.0, Culture=neutral, PublicKeyToken=null.
===
LOG: This bind starts in default load context.
LOG: Using application configuration file: D:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.GUI.WPF\bin\Debug\DnDHelper.GUI.WPF.vshost.exe.Config
LOG: Using host configuration file: 
LOG: Using machine configuration file from C:\Windows\Microsoft.NET\Framework64\v4.0.30319\config\machine.config.
LOG: Policy not being applied to reference at this time (private, custom, partial, or location-based assembly bind).
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces.DLL.
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces/ServiceStack.Interfaces.DLL.
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces.EXE.
LOG: Attempting download of new URL file:///D:/Users/mperszewski/Documents/Mac/SVN/DnD/trunk/DnDHelper.GUI.WPF/bin/Debug/ServiceStack.Interfaces/ServiceStack.Interfaces.EXE.

2014-10-23 08:56:11,043 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 08:58:43,296 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 08:58:43,484 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 08:58:43,636 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 08:58:43,669 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 08:58:44,280 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 08:58:44,320 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 08:58:44,362 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 08:58:44,366 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 08:58:44,369 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 08:58:44,402 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,409 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 08:58:44,443 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,448 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 08:58:44,451 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 08:58:44,454 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 08:58:44,467 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,474 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 08:58:44,485 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,490 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 08:58:44,493 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 08:58:44,497 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 08:58:44,523 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,529 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 08:58:44,555 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,560 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 08:58:44,563 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 08:58:44,567 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 08:58:44,595 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,599 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 08:58:44,627 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,632 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 08:58:44,635 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 08:58:44,638 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 08:58:44,692 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,697 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 08:58:44,751 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,756 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 08:58:44,759 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 08:58:44,763 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 08:58:44,794 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,800 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 08:58:44,831 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,836 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 08:58:44,840 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 08:58:44,844 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 08:58:44,871 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,875 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 08:58:44,905 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 08:58:44,909 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 08:58:44,912 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 08:58:44,916 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 08:58:45,094 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 08:58:45,249 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 08:58:45,381 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 08:58:45,512 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 08:58:45,536 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:58:45,560 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 08:58:45,580 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:58:45,587 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 08:58:45,590 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 08:58:45,594 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 08:58:45,605 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,610 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 08:58:45,625 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,629 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 08:58:45,633 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 08:58:45,636 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 08:58:45,649 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,656 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 08:58:45,670 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,674 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 08:58:45,677 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 08:58:45,681 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 08:58:45,702 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 08:58:45,710 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 08:58:45,732 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 08:58:45,737 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 08:58:45,740 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 08:58:45,744 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 08:58:45,755 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 08:58:45,759 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 08:58:45,770 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 08:58:45,774 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 08:58:45,778 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 08:58:45,781 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 08:58:45,793 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,797 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 08:58:45,810 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,814 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 08:58:45,817 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 08:58:45,821 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 08:58:45,830 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 08:58:45,834 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 08:58:45,844 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 08:58:45,848 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 08:58:45,851 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 08:58:45,854 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 08:58:45,867 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,872 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 08:58:45,883 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,887 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 08:58:45,891 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 08:58:45,894 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 08:58:45,914 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:58:45,919 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 08:58:45,940 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 08:58:45,948 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 08:58:45,952 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 08:58:45,956 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 08:58:45,966 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,971 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 08:58:45,981 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:45,985 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 08:58:45,988 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 08:58:45,992 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 08:58:46,001 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:46,005 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 08:58:46,014 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:46,018 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 08:58:46,021 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 08:58:46,025 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 08:58:46,035 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:46,039 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 08:58:46,048 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 08:58:46,052 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 08:58:46,055 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 08:58:46,059 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 08:58:46,251 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 08:58:46,610 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 08:58:46,619 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 08:58:46,624 INFO  AppFacade - Rejestracja typów
2014-10-23 08:58:46,629 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 08:58:46,632 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 08:58:46,636 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 08:58:46,641 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 08:58:46,647 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 08:58:46,653 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 08:58:46,657 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 08:58:46,662 INFO  AppFacade - Black List:
2014-10-23 08:58:46,665 INFO  AppFacade - Typy zarejestrowano
2014-10-23 08:58:46,670 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 08:58:46,683 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-23 08:58:46,687 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 08:58:46,929 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 08:58:53,387 INFO  BriefServiceQueueManager - Usuniêto wszystkich EnemyBriefów
2014-10-23 09:12:00,724 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 09:12:00,920 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 09:12:01,073 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:12:01,106 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:12:01,730 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:12:01,772 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:12:01,815 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:12:01,819 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:12:01,822 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:12:01,853 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:01,860 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:12:01,894 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:01,899 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:12:01,902 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:12:01,905 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:12:01,918 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:01,924 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:12:01,936 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:01,940 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:12:01,943 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:12:01,946 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:12:01,973 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:01,979 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:12:02,006 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,014 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:12:02,018 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:12:02,021 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:12:02,049 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,053 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:12:02,081 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,086 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:12:02,089 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:12:02,092 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:12:02,146 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,151 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:12:02,204 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,208 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:12:02,212 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:12:02,215 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:12:02,246 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,252 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:12:02,285 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,290 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:12:02,293 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:12:02,296 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:12:02,324 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,328 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:12:02,356 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:12:02,360 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:12:02,363 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:12:02,367 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 09:12:02,548 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 09:12:02,704 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 09:12:02,839 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 09:12:02,970 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:12:02,990 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:12:03,010 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:12:03,029 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:12:03,035 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:12:03,038 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:12:03,042 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:12:03,053 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,059 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:12:03,070 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,074 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:12:03,077 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:12:03,080 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:12:03,095 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,099 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:12:03,112 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,117 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:12:03,121 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:12:03,124 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:12:03,144 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:12:03,153 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:12:03,173 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:12:03,178 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:12:03,182 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:12:03,186 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:12:03,196 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:12:03,200 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:12:03,213 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:12:03,217 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:12:03,221 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:12:03,224 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:12:03,236 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,241 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:12:03,253 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,257 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:12:03,260 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:12:03,264 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:12:03,273 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:12:03,278 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:12:03,287 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:12:03,291 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:12:03,295 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:12:03,298 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:12:03,311 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,315 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:12:03,327 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,332 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:12:03,336 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:12:03,339 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:12:03,359 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:12:03,365 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:12:03,385 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:12:03,393 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:12:03,396 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:12:03,400 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:12:03,409 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,415 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:12:03,425 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,429 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:12:03,432 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:12:03,435 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:12:03,445 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,449 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:12:03,458 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,462 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:12:03,465 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:12:03,468 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:12:03,478 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,482 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:12:03,491 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:12:03,495 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:12:03,500 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:12:03,504 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 09:12:03,699 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 09:12:04,087 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 09:12:04,090 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 09:12:04,096 INFO  AppFacade - Rejestracja typów
2014-10-23 09:12:04,100 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 09:12:04,106 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 09:12:04,111 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 09:12:04,116 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 09:12:04,120 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 09:12:04,127 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 09:12:04,131 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 09:12:04,135 INFO  AppFacade - Black List:
2014-10-23 09:12:04,138 INFO  AppFacade - Typy zarejestrowano
2014-10-23 09:12:04,143 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 09:12:04,156 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-23 09:12:04,159 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 09:12:04,407 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 09:12:31,134 INFO  Battle - Dodano membera: Szkielet, Inicjatywa: 1 + 4 = 4
2014-10-23 09:12:38,859 INFO  Battle - Dodano membera: Szkielet, Inicjatywa: 1 + 6 = 6
2014-10-23 09:17:27,029 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 09:17:27,217 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 09:17:27,362 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:17:27,395 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:17:27,998 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:17:28,036 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:17:28,077 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:17:28,081 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:17:28,084 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:17:28,116 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,122 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:17:28,156 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,161 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:17:28,164 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:17:28,167 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:17:28,180 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,186 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:17:28,199 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,202 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:17:28,206 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:17:28,209 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:17:28,236 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,241 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:17:28,267 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,275 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:17:28,278 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:17:28,281 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:17:28,310 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,314 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:17:28,342 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,347 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:17:28,350 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:17:28,353 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:17:28,406 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,411 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:17:28,465 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,470 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:17:28,473 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:17:28,478 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:17:28,512 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,518 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:17:28,551 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,556 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:17:28,559 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:17:28,563 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:17:28,592 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,597 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:17:28,625 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:17:28,649 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:17:28,653 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:17:28,657 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 09:17:28,848 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 09:17:29,105 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 09:17:29,245 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 09:17:29,373 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:17:29,393 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:17:29,415 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:17:29,434 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:17:29,441 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:17:29,444 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:17:29,448 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:17:29,460 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,465 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:17:29,478 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,482 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:17:29,486 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:17:29,489 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:17:29,504 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,509 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:17:29,522 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,527 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:17:29,530 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:17:29,534 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:17:29,555 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:17:29,563 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:17:29,585 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:17:29,590 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:17:29,593 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:17:29,597 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:17:29,608 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:17:29,613 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:17:29,624 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:17:29,629 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:17:29,632 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:17:29,635 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:17:29,648 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,652 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:17:29,665 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,669 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:17:29,673 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:17:29,676 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:17:29,685 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:17:29,689 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:17:29,698 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:17:29,703 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:17:29,706 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:17:29,710 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:17:29,723 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,728 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:17:29,741 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,745 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:17:29,749 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:17:29,752 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:17:29,772 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:17:29,777 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:17:29,796 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:17:29,806 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:17:29,810 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:17:29,813 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:17:29,823 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,827 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:17:29,839 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,844 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:17:29,848 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:17:29,851 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:17:29,860 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,864 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:17:29,874 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,878 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:17:29,882 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:17:29,885 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:17:29,894 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,899 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:17:29,907 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:17:29,911 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:17:29,915 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:17:29,918 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 09:17:30,109 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 09:17:30,504 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 09:17:30,508 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 09:17:30,515 INFO  AppFacade - Rejestracja typów
2014-10-23 09:17:30,521 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 09:17:30,526 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 09:17:30,531 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 09:17:30,542 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 09:17:30,546 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 09:17:30,554 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 09:17:30,559 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 09:17:30,563 INFO  AppFacade - Black List:
2014-10-23 09:17:30,566 INFO  AppFacade - Typy zarejestrowano
2014-10-23 09:17:30,571 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 09:17:30,587 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-23 09:17:30,590 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 09:17:30,858 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 09:17:33,544 INFO  BriefServiceQueueManager - Usuniêto wszystkich EnemyBriefów
2014-10-23 09:17:41,207 INFO  Battle - Dodano membera: Szkielet, Inicjatywa: 1 + 4 = 4
2014-10-23 09:17:43,137 INFO  Battle - Dodano membera: Szkielet, Inicjatywa: 1 + 4 = 4
2014-10-23 09:17:44,663 INFO  Battle - Dodano membera: Szkielet, Inicjatywa: 1 + 4 = 4
2014-10-23 09:17:48,111 INFO  Battle - Dodano membera: Szkielet, Inicjatywa: 1 + 4 = 4
2014-10-23 09:17:49,459 INFO  Battle - Ustawiono aktywnego membera: Szkielet
2014-10-23 09:19:39,275 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 09:19:39,462 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 09:19:39,614 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:19:39,647 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:19:40,241 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:19:40,284 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:19:40,327 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:19:40,330 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:19:40,333 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:19:40,365 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,371 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:19:40,405 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,410 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:19:40,414 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:19:40,418 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:19:40,431 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,437 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:19:40,450 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,454 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:19:40,457 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:19:40,461 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:19:40,488 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,495 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:19:40,522 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,527 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:19:40,530 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:19:40,534 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:19:40,563 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,567 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:19:40,597 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,601 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:19:40,606 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:19:40,609 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:19:40,665 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,670 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:19:40,726 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,731 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:19:40,734 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:19:40,738 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:19:40,770 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,775 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:19:40,806 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,811 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:19:40,814 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:19:40,818 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:19:40,846 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,850 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:19:40,878 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:19:40,882 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:19:40,885 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:19:40,889 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 09:19:41,062 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 09:19:41,212 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 09:19:41,344 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 09:19:41,480 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:19:41,501 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:19:41,522 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:19:41,543 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:19:41,550 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:19:41,554 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:19:41,557 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:19:41,569 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,573 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:19:41,584 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,589 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:19:41,592 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:19:41,595 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:19:41,609 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,614 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:19:41,629 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,633 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:19:41,637 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:19:41,640 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:19:41,663 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:19:41,670 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:19:41,692 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:19:41,698 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:19:41,701 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:19:41,705 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:19:41,716 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:19:41,721 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:19:41,731 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:19:41,735 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:19:41,739 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:19:41,743 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:19:41,757 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,761 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:19:41,774 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,779 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:19:41,783 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:19:41,786 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:19:41,795 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:19:41,799 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:19:41,809 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:19:41,814 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:19:41,818 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:19:41,822 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:19:41,835 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,839 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:19:41,853 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,858 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:19:41,861 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:19:41,864 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:19:41,886 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:19:41,892 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:19:41,912 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:19:41,921 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:19:41,924 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:19:41,928 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:19:41,938 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,943 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:19:41,954 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,958 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:19:41,961 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:19:41,964 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:19:41,973 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,978 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:19:41,987 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:41,991 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:19:41,995 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:19:41,998 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:19:42,007 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:42,012 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:19:42,021 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:19:42,025 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:19:42,028 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:19:42,032 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 09:19:42,219 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 09:19:42,584 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 09:19:42,587 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 09:19:42,593 INFO  AppFacade - Rejestracja typów
2014-10-23 09:19:42,597 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 09:19:42,601 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 09:19:42,605 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 09:19:42,610 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 09:19:42,615 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 09:19:42,621 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 09:19:42,625 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 09:19:42,629 INFO  AppFacade - Black List:
2014-10-23 09:19:42,635 INFO  AppFacade - Typy zarejestrowano
2014-10-23 09:19:42,641 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 09:19:42,655 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-23 09:19:42,658 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 09:19:42,906 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 09:19:45,910 INFO  BriefServiceQueueManager - Usuniêto wszystkich EnemyBriefów
2014-10-23 09:19:54,977 INFO  Battle - Dodano membera: Zombie, Inicjatywa: 0 + 1 = 1
2014-10-23 09:19:56,741 INFO  Battle - Dodano membera: Zombie, Inicjatywa: 0 + 1 = 1
2014-10-23 09:20:05,078 INFO  Battle - Dodano membera: Drug, Inicjatywa: -5 + 1 = 1
2014-10-23 09:20:13,813 INFO  Battle - Dodano membera: Kalur, Inicjatywa: 0 + 1 = 1
2014-10-23 09:20:16,799 INFO  Battle - Ustawiono aktywnego membera: Zombie
2014-10-23 09:20:20,476 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ wspó³czynnika Constitution (Bie¿¹cego) o 2
2014-10-23 09:20:20,481 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ wspó³czynnika Charisma (Bie¿¹cego) o -2
2014-10-23 09:20:20,505 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Kondycja Premia do ¿ycia : +3 (Cecha g³ówna - Kondycja)
2014-10-23 09:20:20,512 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 1, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-23 09:20:20,516 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Czaroznastwo : +2 (Cecha g³ówna - Inteligencja)
2014-10-23 09:20:20,519 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Przeszukiwanie : +2 (Cecha g³ówna - Inteligencja)
2014-10-23 09:20:20,522 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Inteligencja Premia do umiejêtnoœci: Stosowanie mag. urz¹dzeñ : +2 (Cecha g³ówna - Inteligencja)
2014-10-23 09:20:20,526 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 3 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:20:20,529 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +3 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:20:20,533 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +3 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:20:20,536 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Wystêpy : -1 (Cecha g³ówna - Charyzma)
2014-10-23 09:20:20,540 DEBUG CharacterController - Kalur: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Dyplomacja : -1 (Cecha g³ówna - Charyzma)
2014-10-23 09:20:20,545 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Czaroznastwo o 2
2014-10-23 09:20:20,549 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Przeszukiwanie o 2
2014-10-23 09:20:20,552 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Stosowanie mag. urz¹dzeñ o 2
2014-10-23 09:20:20,556 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 3
2014-10-23 09:20:20,559 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 3
2014-10-23 09:20:20,562 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Wystêpy o -1
2014-10-23 09:20:20,565 DEBUG CharacterController - Kalur: Zwiêkszono wartoœæ skilla Dyplomacja o -1
2014-10-23 09:20:22,910 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ wspó³czynnika Constitution (Bie¿¹cego) o 2
2014-10-23 09:20:22,917 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ wspó³czynnika Charisma (Bie¿¹cego) o -2
2014-10-23 09:20:22,930 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ wspó³czynnika Strength (Bie¿¹cego) o 1
2014-10-23 09:20:23,085 DEBUG CharacterController - Drug: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Topór+3 : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-23 09:20:23,113 DEBUG CharacterController - Drug: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Topór+3 : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-23 09:20:23,157 DEBUG CharacterController - Drug: Dodano Bonus - Atut: Specjalizacja Bonus dla broni : Topór+3 : Premia do obra¿eñ : 2[Fizyczne] (Atut: Specjalizacja) (Atut: Specjalizacja) (Atut: Specjalizacja)
2014-10-23 09:20:23,161 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +5 (Cecha g³ówna - Si³a)
2014-10-23 09:20:23,168 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 5[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-23 09:20:23,172 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +5 (Cecha g³ówna - Si³a)
2014-10-23 09:20:23,175 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Skakanie : +5 (Cecha g³ówna - Si³a)
2014-10-23 09:20:23,179 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +5 (Cecha g³ówna - Si³a)
2014-10-23 09:20:23,183 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:20:23,187 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +1 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:20:23,191 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 1, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:20:23,197 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +1 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:20:23,201 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Kondycja Premia do ¿ycia : +12 (Cecha g³ówna - Kondycja)
2014-10-23 09:20:23,204 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 4, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-23 09:20:23,207 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 1 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:20:23,211 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +1 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:20:23,214 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +1 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:20:23,217 DEBUG CharacterController - Drug: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Zastraszanie : -1 (Cecha g³ówna - Charyzma)
2014-10-23 09:20:23,221 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ skilla Wspinaczka o 5
2014-10-23 09:20:23,231 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ skilla Skakanie o 5
2014-10-23 09:20:23,235 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ skilla P³ywanie o 5
2014-10-23 09:20:23,238 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 1
2014-10-23 09:20:23,242 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 1
2014-10-23 09:20:23,245 DEBUG CharacterController - Drug: Zwiêkszono wartoœæ skilla Zastraszanie o -1
2014-10-23 09:21:50,101 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AppSetting
2014-10-23 09:21:50,289 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.RaceDefinition
2014-10-23 09:21:50,443 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:21:50,476 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:21:51,071 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Barbarian
2014-10-23 09:21:51,113 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "Sza³"
    atutRage.AdditionalInfo = "{0}/dzieñ".format((level / 4)+1)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("SpeedBonus",source)
    at.Value = 3;
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level/3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Redukcja obra¿eñ"
        at.AdditionalInfo = "Fizyczne({0})".format(1 + (level - 7) / 3)
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("ResistanceBonus", source)
        at.Value = 1 + (level - 7)/3
        at.DamageType = DamageTypes.Physical
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Potê¿niejszy sza³"
        character.Controller.AddBonusOriginal(at)
    if (level >= 14):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Niez³omna wola"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mê¿ny sza³"
        character.Controller.AddBonusOriginal(at)
    return
2014-10-23 09:21:51,156 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:21:51,160 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Barbarian
2014-10-23 09:21:51,163 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:21:51,196 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,203 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Bard
2014-10-23 09:21:51,237 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    atutRage = BonusFactory.GetByName("AtutBonus", source)
    atutRage.AtutName = "[Klasa/Bard] Muzyka barda"
    atutRage.AdditionalInfo = "{0}/dzieñ".format(level)
    character.Controller.AddBonusOriginal(atutRage)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Kontrpieœñ"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Fascynacja"
    character.Controller.AddBonusOriginal(at)
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Klasa/Bard] Inspirowanie odwagi"
    at.AdditionalInfo = "+1"
    if (level >= 8):
        at.AdditionalInfo = "+2"
    if (level >= 14):
        at.AdditionalInfo = "+3"
    if (level >= 20):
        at.AdditionalInfo = "+4"
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie bieg³oœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Sugestia"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Pieœn wolnoœci"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Bard] Inspirowanie heroizmu"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,242 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:21:51,245 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Bard
2014-10-23 09:21:51,248 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:21:51,261 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,267 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Mage
2014-10-23 09:21:51,279 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    bonusAtutes = level / 5
    character.SkillPointsLeft.Atutes += bonusAtutes
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "[Tp]Zapisanie zwoju"
    character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,283 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:21:51,286 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Mage
2014-10-23 09:21:51,290 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:21:51,316 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,322 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Druid
2014-10-23 09:21:51,349 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus")
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Wêdrówka bez œladów"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Kszta³ty natury"
        count = level-5
        if (count > 6):
            count = 6
        at.AdditionalInfo = "{0}/dzieñ".format(count)
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Niepodatnoœæ na jad"
        character.Controller.AddBonusOriginal(at)
    if (level >= 16):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Przemiana w ¿ywio³aka"
        at.AdditionalInfo = "{0}/dzieñ".format(level-15)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,355 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:21:51,358 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Druid
2014-10-23 09:21:51,362 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:21:51,390 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,394 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Thief
2014-10-23 09:21:51,423 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Podstêpny atak"
    at.AdditionalInfo = "+{0}K6".format(1 + level/2)
    character.Controller.AddBonusOriginal(at)
    
    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyczucie pu³apek"
        at.AdditionalInfo = "+{0}".format(level / 3)
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 10):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Mistrzostwo w umiejêtnoœciach"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Wyniszczaj¹cy atak"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,427 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:21:51,431 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Thief
2014-10-23 09:21:51,434 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:21:51,486 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,492 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Monk
2014-10-23 09:21:51,546 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Grad ciosów"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Mnich] Premia do KP"
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 3):
        bonus = BonusFactory.GetByName("ThrowBonus", source)
        bonus.BonusType.WillThrow = 2
        character.Controller.AddBonusOriginal(bonus)
        bonus = BonusFactory.GetByName("SpeedBonus", source)
        bonus.Value = 3;
        if (level >= 6):
            bonus.Value = 6
        if (level >= 9):
            bonus.Value = 9
        if (level >= 12):
            bonus.Value = 12
        if (level >= 15):
            bonus.Value = 15
        if (level >= 18):
            bonus.Value = 18
        character.Controller.AddBonusOriginal(bonus)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Nieœwiadomy unik"
        character.Controller.AddBonusOriginal(at)
    if (level >= 5):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Czystoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Jednoœæ cia³a"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Doskonalsze uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 11):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowe cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 12):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich[ Daleki krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Diamentowa dusza"
        character.Controller.AddBonusOriginal(at)
    if (level >= 15):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Dr¿¹ca piêœæ"
        character.Controller.AddBonusOriginal(at)
    if (level >= 19):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Puste cia³o"
        character.Controller.AddBonusOriginal(at)
    if (level >= 20):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Mnich] Idealne ja"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,550 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:21:51,554 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Monk
2014-10-23 09:21:51,557 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:21:51,590 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,596 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Paladin
2014-10-23 09:21:51,628 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Wykrycie z³a"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Paladyn] Ugodzenie z³a"
    at.AdditionalInfo = "{0}/dzieñ".format(1 + level / 5)
    character.Controller.AddBonusOriginal(at)

    if (level >= 2):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Nak³adanie r¹k"
        character.Controller.AddBonusOriginal(at)

        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boska ³aska"
        character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Aura odwagi"
        character.Controller.AddBonusOriginal(at)
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Boskie zdrowie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 4):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Odpêdzanie nieumar³ych"
        character.Controller.AddBonusOriginal(at)
    if (level >= 6):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Paladyn] Prze³amanie choroby"
        at.AdditionalInfo = "{0}/tydzieñ".format(level-5 / 2)
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,632 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:21:51,635 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Paladin
2014-10-23 09:21:51,639 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:21:51,667 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,671 DEBUG PythonEngine - Rejestracja skryptu: CLASS_Ranger
2014-10-23 09:21:51,699 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import DamageTypes

def Calculate(character,repository):
    source = "Klasa"
    level = character.Level
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "[Klasa/Tropiciel] Preferowany wróg"
    character.Controller.AddBonusOriginal(at)
    
    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "Tropienie"
    character.Controller.AddBonusOriginal(at)

    at = BonusFactory.GetByName("AtutBonus", source)
    at.AtutName = "WiêŸ z dzicz¹"
    character.Controller.AddBonusOriginal(at)

    if (level >= 3):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Krzepa"
        character.Controller.AddBonusOriginal(at)
    if (level >= 7):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Druid] Leœny krok"
        character.Controller.AddBonusOriginal(at)
    if (level >= 9):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "Uchylanie"
        character.Controller.AddBonusOriginal(at)
    if (level >= 13):
        at = BonusFactory.GetByName("AtutBonus", source)
        at.AtutName = "[Klasa/Tropciel] Kamufla¿"
        character.Controller.AddBonusOriginal(at)
    return
	
2014-10-23 09:21:51,704 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:21:51,707 INFO  PythonEngine - Zarejestrowano skrypt: CLASS_Ranger
2014-10-23 09:21:51,711 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ClassDefinition
2014-10-23 09:21:51,887 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.EffectDefinition
2014-10-23 09:21:52,037 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SpellDefinition
2014-10-23 09:21:52,181 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.SkillDefinition
2014-10-23 09:21:52,322 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:21:52,341 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:21:52,361 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na broni
2014-10-23 09:21:52,381 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon(character, rightWeapon, atut)
    ApplyForWeapon(character, leftWeapon, atut)
    return

def ApplyForWeapon(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("AttackBonus", "Atut: Skupienie na broni")
    bonus.Value = 1;
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Skupienie na broni")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:21:52,389 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:21:52,392 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na broni
2014-10-23 09:21:52,396 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:21:52,407 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,411 DEBUG PythonEngine - Rejestracja skryptu: Defensywna walka dwiem bronmi
2014-10-23 09:21:52,422 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    if (rightWeapon != None and leftWeapon != None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Defensywna walka dwiema broniami")
        bonus.Value = 1;
        bonus.ACType = "Zbroja"
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,426 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:21:52,429 INFO  PythonEngine - Zarejestrowano skrypt: Defensywna walka dwiem bronmi
2014-10-23 09:21:52,433 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:21:52,447 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,451 DEBUG PythonEngine - Rejestracja skryptu: Premia do KP (mnich)
2014-10-23 09:21:52,465 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        bonus = BonusFactory.GetByName("ACBonus", "Atut: Premia do KP (mnich)")
        bonus.ACType = "Naturalny pancerz"
        bonusFromWisdom = Rules.GetStandardBonus(character.CurrentStats.Wisdom)
        if (bonusFromWisdom > 0):
            bonus.Value = bonusFromWisdom
        bonus.Value += level / 5
        character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,470 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:21:52,473 INFO  PythonEngine - Zarejestrowano skrypt: Premia do KP (mnich)
2014-10-23 09:21:52,476 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:21:52,500 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:21:52,507 DEBUG PythonEngine - Rejestracja skryptu: Grad ciosów (mnich)
2014-10-23 09:21:52,528 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    level = character.Level
    armor = character.GetItemByPosition(ItemPosition.Torso)
    if (armor == None):
        character.CustomAttacks.RemoveAll(lambda a:a.Name == "Atak (piêœæ)")
        customAttack = CustomAttack()
        customAttack.Name = "Atak (piêœæ)"
        bonus = BonusFactory.GetByName("DamageBonus")
        damage = Damage()
        if (level <= 3):
            damage.Elements.Add(DamageBone(8,1))
        if (level > 3 and level <= 7):
            damage.Elements.Add(DamageBone(6,2))
        if (level > 7 and level <= 11):
            damage.Elements.Add(DamageBone(8,2))
        if (level > 11 and level <= 15):
            damage.Elements.Add(DamageBone(6,3))
        if (level > 15):
            damage.Elements.Add(DamageBone(8,4))           
        bonus.Amount = damage
        customAttack.Bonuses.Add(bonus)
        character.CustomAttacks.Add(customAttack)

    return
2014-10-23 09:21:52,534 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:21:52,537 INFO  PythonEngine - Zarejestrowano skrypt: Grad ciosów (mnich)
2014-10-23 09:21:52,541 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:21:52,551 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:21:52,556 DEBUG PythonEngine - Rejestracja skryptu: Boska ³aska (Paladyn)
2014-10-23 09:21:52,566 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Paladyn - boska ³aska")
    charismaBonus = Rules.GetStandardBonus(character.CurrentStats.Charisma)
    at.BonusType.WillThrow += charismaBonus
    at.BonusType.ReflexThrow += charismaBonus
    at.BonusType.EnduranceThrow += charismaBonus
    character.Controller.AddBonus(at)
    return
2014-10-23 09:21:52,570 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:21:52,574 INFO  PythonEngine - Zarejestrowano skrypt: Boska ³aska (Paladyn)
2014-10-23 09:21:52,577 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:21:52,590 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,594 DEBUG PythonEngine - Rejestracja skryptu: Atletyka
2014-10-23 09:21:52,607 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Wspinaczka"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "P³ywanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,611 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:21:52,615 INFO  PythonEngine - Zarejestrowano skrypt: Atletyka
2014-10-23 09:21:52,618 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:21:52,627 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:21:52,631 DEBUG PythonEngine - Rejestracja skryptu: B³yskawiczny refleks
2014-10-23 09:21:52,640 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    at = BonusFactory.GetByName("ThrowBonus", "Atut - b³yskawiczny refleks")
    at.BonusType.ReflexThrow += 2
    character.Controller.AddBonus(at)
    return
2014-10-23 09:21:52,645 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:21:52,648 INFO  PythonEngine - Zarejestrowano skrypt: B³yskawiczny refleks
2014-10-23 09:21:52,652 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:21:52,664 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,668 DEBUG PythonEngine - Rejestracja skryptu: Czujnoœæ
2014-10-23 09:21:52,681 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Nas³uchiwanie"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Atletyka")
    bonus.SkillName = "Spostrzegawczoœæ"
    bonus.Value = 2
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,685 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:21:52,688 INFO  PythonEngine - Zarejestrowano skrypt: Czujnoœæ
2014-10-23 09:21:52,692 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:21:52,712 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:21:52,717 DEBUG PythonEngine - Rejestracja skryptu: Specjalizacja
2014-10-23 09:21:52,738 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    rightWeapon = character.GetItemByPosition(ItemPosition.RightHand)
    leftWeapon = character.GetItemByPosition(ItemPosition.LeftHand)
    ApplyForWeapon2(character, rightWeapon, atut)
    ApplyForWeapon2(character, leftWeapon, atut)
    return

def ApplyForWeapon2(character, item, atut):
    if (item == None):
        return

    if (item.Definition.PrototypeName != atut.AdditionalInfo and item.Name != atut.AdditionalInfo):
        return

    bonus = BonusFactory.GetByName("DamageBonus", "Atut: Specjalizacja")
    bonus.Amount.AddElement(DamageBone(1, 2))
    weaponBonus = BonusFactory.GetByName("WeaponBonus", "Atut: Specjalizacja")
    weaponBonus.Item = item
    weaponBonus.Bonus = bonus
    character.Controller.AddBonus(weaponBonus)
    return

2014-10-23 09:21:52,747 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:21:52,750 INFO  PythonEngine - Zarejestrowano skrypt: Specjalizacja
2014-10-23 09:21:52,753 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:21:52,763 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,768 DEBUG PythonEngine - Rejestracja skryptu: Skupienie na umiejêtnoœci
2014-10-23 09:21:52,779 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("SecondarySkillBonus", "Atut: Skupienie na umiejêtnoœci")
    bonus.SkillName = atut.AdditionalInfo
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,784 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:21:52,788 INFO  PythonEngine - Zarejestrowano skrypt: Skupienie na umiejêtnoœci
2014-10-23 09:21:52,792 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:21:52,801 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,805 DEBUG PythonEngine - Rejestracja skryptu: Twardoœæ
2014-10-23 09:21:52,815 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("HPBonus", "Atut: Twardoœæ")
    bonus.Value = 3
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,819 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:21:52,822 INFO  PythonEngine - Zarejestrowano skrypt: Twardoœæ
2014-10-23 09:21:52,826 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:21:52,835 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,839 DEBUG PythonEngine - Rejestracja skryptu: Inicjatywa
2014-10-23 09:21:52,849 DEBUG PythonEngine - Zawartoœæ skryptu: import clr
clr.AddReference('DnDHelper.Domain')
from DnDHelper.Domain.Bonuses import BonusFactory
from DnDHelper.Domain import *

def Calculate(character,repository,atut):
    bonus = BonusFactory.GetByName("InitiativeBonus", "Atut: Doskonalsza inicjatywa")
    bonus.Value = 4
    character.Controller.AddBonus(bonus)
    return
2014-10-23 09:21:52,853 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:21:52,857 INFO  PythonEngine - Zarejestrowano skrypt: Inicjatywa
2014-10-23 09:21:52,860 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.AtutDefinition
2014-10-23 09:21:53,060 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.ItemDefinition
2014-10-23 09:21:53,435 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.CharacterGroup
2014-10-23 09:21:53,439 INFO  RepositorySet - Zarejestrowano i wczytano repozytorium: DnDHelper.Domain.Experience
2014-10-23 09:21:53,445 INFO  AppFacade - Rejestracja typów
2014-10-23 09:21:53,449 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.AppFacade
2014-10-23 09:21:53,453 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IAppStateController
2014-10-23 09:21:53,457 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.RepositorySet
2014-10-23 09:21:53,462 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IQueueManager
2014-10-23 09:21:53,467 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.ICharacterCalculator
2014-10-23 09:21:53,473 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IGameTimer
2014-10-23 09:21:53,477 INFO  AppFacade - Zarejestrowano: DnDHelper.Domain.IUpdateClient
2014-10-23 09:21:53,482 INFO  AppFacade - Black List:
2014-10-23 09:21:53,490 INFO  AppFacade - Typy zarejestrowano
2014-10-23 09:21:53,495 INFO  GameTimer - SubscribeOnTurnChange : AppFacade.SubscribeEvents
2014-10-23 09:21:53,509 INFO  BriefServiceQueueManager - Wys³ano: 5 briefów, 0 enemy briefów
2014-10-23 09:21:53,512 INFO  GameTimer - SubscribeOnTurnChange : GeneralViewModel
2014-10-23 09:21:53,765 INFO  GameTimer - SubscribeOnTurnChange : Battle.ctor
2014-10-23 09:22:03,027 INFO  Battle - Dodano membera: Drow-wojownik1, Inicjatywa: 3 + 1 = 1
2014-10-23 09:22:04,580 INFO  Battle - Dodano membera: Drow-wojownik1, Inicjatywa: 3 + 1 = 1
2014-10-23 09:22:09,308 INFO  Battle - Dodano membera: Serverus, Inicjatywa: 21 + 1 = 1
2014-10-23 09:22:16,128 INFO  Battle - Dodano membera: Roland Magnus, Inicjatywa: 4 + 1 = 1
2014-10-23 09:22:18,901 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:19,018 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:19,464 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:19,486 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 3[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-23 09:22:19,490 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:19,495 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +5 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:19,499 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 5, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:19,503 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:19,506 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ukrywanie siê : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:19,510 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do umiejêtnoœci: Ciche poruszanie siê : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:19,513 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 3, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-23 09:22:19,517 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:19,521 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:19,524 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Sztuka przetrwania : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:19,528 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:19,532 DEBUG CharacterController - Roland Magnus: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Dyplomacja : +2 (Cecha g³ówna - Charyzma)
2014-10-23 09:22:19,539 DEBUG CharacterController - Roland Magnus: Zwiêkszono wartoœæ skilla Ukrywanie siê o 5
2014-10-23 09:22:19,544 DEBUG CharacterController - Roland Magnus: Zwiêkszono wartoœæ skilla Ciche poruszanie siê o 5
2014-10-23 09:22:19,548 DEBUG CharacterController - Roland Magnus: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 2
2014-10-23 09:22:19,551 DEBUG CharacterController - Roland Magnus: Zwiêkszono wartoœæ skilla Sztuka przetrwania o 2
2014-10-23 09:22:19,554 DEBUG CharacterController - Roland Magnus: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-23 09:22:19,558 DEBUG CharacterController - Roland Magnus: Zwiêkszono wartoœæ skilla Dyplomacja o 2
2014-10-23 09:22:20,248 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:20,368 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:21,229 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ wspó³czynnika Dexterity (Bie¿¹cego) o 2
2014-10-23 09:22:21,232 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ wspó³czynnika Constitution (Bie¿¹cego) o -2
2014-10-23 09:22:21,235 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-23 09:22:21,260 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Defensywna walka dwiema broniami Premia do KP : +1 (Zbroja) (Atut: Defensywna walka dwiema broniami)
2014-10-23 09:22:21,268 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Sejmitar Drowów+3 : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-23 09:22:21,272 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Sejmitar Drowów+3 : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-23 09:22:21,293 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Specjalizacja Bonus dla broni : Sejmitar Drowów+3 : Premia do obra¿eñ : 2[Fizyczne] (Atut: Specjalizacja) (Atut: Specjalizacja) (Atut: Specjalizacja)
2014-10-23 09:22:21,300 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Specjalizacja Bonus dla broni : Sejmitar Drowów+3 : Premia do obra¿eñ : 2[Fizyczne] (Atut: Specjalizacja) (Atut: Specjalizacja) (Atut: Specjalizacja)
2014-10-23 09:22:21,304 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,308 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 3[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,311 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,314 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Skakanie : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,318 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,322 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,325 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +5 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,328 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 5, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,331 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,335 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Kondycja Premia do ¿ycia : -6 (Cecha g³ówna - Kondycja)
2014-10-23 09:22:21,338 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 1, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-23 09:22:21,342 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:21,345 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:21,349 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:21,353 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Zastraszanie : +1 (Cecha g³ówna - Charyzma)
2014-10-23 09:22:21,358 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Wspinaczka o 3
2014-10-23 09:22:21,361 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Skakanie o 3
2014-10-23 09:22:21,364 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla P³ywanie o 3
2014-10-23 09:22:21,368 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 2
2014-10-23 09:22:21,371 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-23 09:22:21,375 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Zastraszanie o 1
2014-10-23 09:22:21,660 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ wspó³czynnika Dexterity (Bie¿¹cego) o 2
2014-10-23 09:22:21,663 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ wspó³czynnika Constitution (Bie¿¹cego) o -2
2014-10-23 09:22:21,671 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-23 09:22:21,674 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Defensywna walka dwiema broniami Premia do KP : +1 (Zbroja) (Atut: Defensywna walka dwiema broniami)
2014-10-23 09:22:21,678 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Sejmitar Drowów+3 : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-23 09:22:21,681 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Skupienie na broni Bonus dla broni : Sejmitar Drowów+3 : Premia do ataku : +1 (Atut: Skupienie na broni) (Atut: Skupienie na broni) (Atut: Skupienie na broni)
2014-10-23 09:22:21,685 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Specjalizacja Bonus dla broni : Sejmitar Drowów+3 : Premia do obra¿eñ : 2[Fizyczne] (Atut: Specjalizacja) (Atut: Specjalizacja) (Atut: Specjalizacja)
2014-10-23 09:22:21,688 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Atut: Specjalizacja Bonus dla broni : Sejmitar Drowów+3 : Premia do obra¿eñ : 2[Fizyczne] (Atut: Specjalizacja) (Atut: Specjalizacja) (Atut: Specjalizacja)
2014-10-23 09:22:21,692 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do ataku : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,696 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do obra¿eñ : 3[Fizyczne] (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,699 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Wspinaczka : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,703 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: Skakanie : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,706 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Si³a Premia do umiejêtnoœci: P³ywanie : +3 (Cecha g³ówna - Si³a)
2014-10-23 09:22:21,710 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do ataku : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,713 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do KP : +5 (Zrêcznoœæ) (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,717 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do rzutów obronnych : Wytr. 0, Ref. 5, Wola 0 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,720 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Zrêcznoœæ Premia do inicjatywy : +5 (Cecha g³ówna - Zrêcznoœæ)
2014-10-23 09:22:21,724 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Kondycja Premia do ¿ycia : -6 (Cecha g³ówna - Kondycja)
2014-10-23 09:22:21,728 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Kondycja Premia do rzutów obronnych : Wytr. 1, Ref. 0, Wola 0 (Cecha g³ówna - Kondycja)
2014-10-23 09:22:21,732 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do rzutów obronnych : Wytr. 0, Ref. 0, Wola 2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:21,735 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Spostrzegawczoœæ : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:21,739 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - M¹droœæ Premia do umiejêtnoœci: Nas³uchiwanie : +2 (Cecha g³ówna - M¹droœæ)
2014-10-23 09:22:21,742 DEBUG CharacterController - Drow-wojownik1: Dodano Bonus - Cecha g³ówna - Charyzma Premia do umiejêtnoœci: Zastraszanie : +1 (Cecha g³ówna - Charyzma)
2014-10-23 09:22:21,745 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Wspinaczka o 3
2014-10-23 09:22:21,749 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Skakanie o 3
2014-10-23 09:22:21,752 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla P³ywanie o 3
2014-10-23 09:22:21,757 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Spostrzegawczoœæ o 2
2014-10-23 09:22:21,761 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Nas³uchiwanie o 2
2014-10-23 09:22:21,764 DEBUG CharacterController - Drow-wojownik1: Zwiêkszono wartoœæ skilla Zastraszanie o 1
2014-10-23 09:22:24,190 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:24,302 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:30,730 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:30,866 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:39,060 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
2014-10-23 09:22:39,182 ERROR CharacterCalculator - Nie znaleziono efektu: Ugodzenie umys³u
System.Management.Instrumentation.InstanceNotFoundException: Nie znaleziono efektu: Ugodzenie umys³u
   at DnDHelper.Domain.CharacterCalculator.GetEffectBonuses(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 211
   at DnDHelper.Domain.CharacterCalculator.Calculate(Character character) in d:\Users\mperszewski\Documents\Mac\SVN\DnD\trunk\DnDHelper.Domain\CharacterCalculator.cs:line 61
